Terminals unused in grammar

   EQUAL


State 0 conflicts: 1 shift/reduce
State 5 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function line
    5     | %empty

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    7 ident: NO_IDENT1
    8      | NO_IDENT2
    9      | IDENT

   10 declarationseq: declaration declarationseq
   11               | comment declarationseq
   12               | %empty

   13 declaration: ident declarations

   14 declarations: COMMA ident declarations
   15             | COLON arr INTEGER SEMICOLON

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   17    | %empty

   18 comment: COMMENT

   19 comments: comment comments
   20         | %empty

   21 statements: comment statements
   22           | statement SEMICOLON statements
   23           | %empty

   24 assignment: var ASSIGN expression

   25 ifstmt: IF boolexpr THEN statements else ENDIF

   26 else: ELSE statements
   27     | %empty

   28 while: WHILE boolexpr BEGINLOOP statements ENDLOOP

   29 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr

   30 read: READ vars

   31 write: WRITE vars

   32 return: RETURN expression

   33 vars: var varcomma

   34 varcomma: COMMA var varcomma
   35         | %empty

   36 statement: assignment
   37          | ifstmt
   38          | while
   39          | do
   40          | read
   41          | write
   42          | CONTINUE
   43          | return

   44 expression: multexpression expressionseq

   45 expressionseq: ADD multexpression expressionseq
   46              | SUB multexpression expressionseq
   47              | %empty

   48 multexpression: term termseq

   49 termseq: MULT term termseq
   50        | DIV term termseq
   51        | MOD term termseq
   52        | %empty

   53 neg: SUB
   54    | %empty

   55 termoption: NUMBER
   56           | L_PAREN expression R_PAREN

   57 term: neg ident termmatch
   58     | neg termoption

   59 termmatch: matchterm
   60          | notmatchterm
   61          | %empty

   62 matchterm: L_PAREN expressionlist R_PAREN

   63 notmatchterm: L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   64 expressionlist: expression expressioncomma

   65 expressioncomma: COMMA expression expressioncomma
   66                | %empty

   67 var: ident
   68    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   69 not: NOT
   70    | %empty

   71 comp: EQ
   72     | NEQ
   73     | LT
   74     | GT
   75     | LTE
   76     | GTE

   77 boolexpr: relationandexpr boolexprseq

   78 boolexprseq: OR relationandexpr boolexprseq
   79            | %empty

   80 relationandexpr: relationexpr relationandexprseq

   81 relationandexprseq: AND relationexpr relationandexprseq
   82                   | %empty

   83 relationexpr: not relationexproptions

   84 relationexproptions: expression comp expression
   85                    | TRUE
   86                    | FALSE
   87                    | L_PAREN boolexpr R_PAREN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3
error (256)
IDENT (258) 9
EQUAL (259)
FUNCTION (260) 6
BEGIN_PARAMS (261) 6
END_PARAMS (262) 6
BEGIN_LOCALS (263) 6
END_LOCALS (264) 6
BEGIN_BODY (265) 6
END_BODY (266) 6
INTEGER (267) 15
ARRAY (268) 16
OF (269) 16
IF (270) 25
THEN (271) 25
ENDIF (272) 25
ELSE (273) 26
WHILE (274) 28 29
DO (275) 29
BEGINLOOP (276) 28 29
ENDLOOP (277) 28 29
CONTINUE (278) 42
READ (279) 30
WRITE (280) 31
AND (281) 81
OR (282) 78
NOT (283) 69
TRUE (284) 85
FALSE (285) 86
RETURN (286) 32
SUB (287) 46 53
ADD (288) 45
MULT (289) 49
DIV (290) 50
MOD (291) 51
EQ (292) 71
NEQ (293) 72
LT (294) 73
GT (295) 74
LTE (296) 75
GTE (297) 76
NUMBER (298) 16 55
SEMICOLON (299) 6 15 22
COLON (300) 15
COMMA (301) 14 34 65
L_PAREN (302) 56 62 87
R_PAREN (303) 56 62 87
L_SQUARE_BRACKET (304) 16 63 68
R_SQUARE_BRACKET (305) 16 63 68
ASSIGN (306) 24
NO_IDENT1 (307) 7
NO_IDENT2 (308) 8
COMMENT (309) 18


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
input (57)
    on left: 1 2, on right: 0 2
line (58)
    on left: 3 4 5, on right: 1 2 4
function (59)
    on left: 6, on right: 4
ident (60)
    on left: 7 8 9, on right: 6 13 14 57 67 68
declarationseq (61)
    on left: 10 11 12, on right: 6 10 11
declaration (62)
    on left: 13, on right: 10
declarations (63)
    on left: 14 15, on right: 13 14
arr (64)
    on left: 16 17, on right: 15
comment (65)
    on left: 18, on right: 11 19 21
comments (66)
    on left: 19 20, on right: 6 19
statements (67)
    on left: 21 22 23, on right: 6 21 22 25 26 28 29
assignment (68)
    on left: 24, on right: 36
ifstmt (69)
    on left: 25, on right: 37
else (70)
    on left: 26 27, on right: 25
while (71)
    on left: 28, on right: 38
do (72)
    on left: 29, on right: 39
read (73)
    on left: 30, on right: 40
write (74)
    on left: 31, on right: 41
return (75)
    on left: 32, on right: 43
vars (76)
    on left: 33, on right: 30 31
varcomma (77)
    on left: 34 35, on right: 33 34
statement (78)
    on left: 36 37 38 39 40 41 42 43, on right: 22
expression (79)
    on left: 44, on right: 24 32 56 63 64 65 68 84
expressionseq (80)
    on left: 45 46 47, on right: 44 45 46
multexpression (81)
    on left: 48, on right: 44 45 46
termseq (82)
    on left: 49 50 51 52, on right: 48 49 50 51
neg (83)
    on left: 53 54, on right: 57 58
termoption (84)
    on left: 55 56, on right: 58
term (85)
    on left: 57 58, on right: 48 49 50 51
termmatch (86)
    on left: 59 60 61, on right: 57
matchterm (87)
    on left: 62, on right: 59
notmatchterm (88)
    on left: 63, on right: 60
expressionlist (89)
    on left: 64, on right: 62
expressioncomma (90)
    on left: 65 66, on right: 64 65
var (91)
    on left: 67 68, on right: 24 33 34
not (92)
    on left: 69 70, on right: 83
comp (93)
    on left: 71 72 73 74 75 76, on right: 84
boolexpr (94)
    on left: 77, on right: 25 28 29 87
boolexprseq (95)
    on left: 78 79, on right: 77 78
relationandexpr (96)
    on left: 80, on right: 77 78
relationandexprseq (97)
    on left: 81 82, on right: 80 81
relationexpr (98)
    on left: 83, on right: 80 81
relationexproptions (99)
    on left: 84 85 86 87, on right: 83


State 0

    0 $accept: . input $end

    COMMENT  shift, and go to state 1
    '\n'     shift, and go to state 2

    FUNCTION  reduce using rule 20 (comments)
    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    input     go to state 3
    line      go to state 4
    function  go to state 5
    comment   go to state 6
    comments  go to state 7


State 1

   18 comment: COMMENT .

    $default  reduce using rule 18 (comment)


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 8
    '\n'  shift, and go to state 9


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . line

    COMMENT  shift, and go to state 1
    '\n'     shift, and go to state 2

    FUNCTION  reduce using rule 20 (comments)
    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    line      go to state 10
    function  go to state 5
    comment   go to state 6
    comments  go to state 7


State 6

   19 comments: comment . comments

    COMMENT  shift, and go to state 1

    $default  reduce using rule 20 (comments)

    comment   go to state 6
    comments  go to state 11


State 7

    6 function: comments . FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    FUNCTION  shift, and go to state 12


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 input: input '\n' . line

    COMMENT  shift, and go to state 1
    '\n'     shift, and go to state 2

    FUNCTION  reduce using rule 20 (comments)
    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    line      go to state 13
    function  go to state 5
    comment   go to state 6
    comments  go to state 7


State 10

    4 line: function line .

    $default  reduce using rule 4 (line)


State 11

   19 comments: comment comments .

    $default  reduce using rule 19 (comments)


State 12

    6 function: comments FUNCTION . ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident  go to state 17


State 13

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 14

    9 ident: IDENT .

    $default  reduce using rule 9 (ident)


State 15

    7 ident: NO_IDENT1 .

    $default  reduce using rule 7 (ident)


State 16

    8 ident: NO_IDENT2 .

    $default  reduce using rule 8 (ident)


State 17

    6 function: comments FUNCTION ident . SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 18


State 18

    6 function: comments FUNCTION ident SEMICOLON . BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 19


State 19

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS . declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 12 (declarationseq)

    ident           go to state 20
    declarationseq  go to state 21
    declaration     go to state 22
    comment         go to state 23


State 20

   13 declaration: ident . declarations

    COLON  shift, and go to state 24
    COMMA  shift, and go to state 25

    declarations  go to state 26


State 21

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq . END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 27


State 22

   10 declarationseq: declaration . declarationseq

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 12 (declarationseq)

    ident           go to state 20
    declarationseq  go to state 28
    declaration     go to state 22
    comment         go to state 23


State 23

   11 declarationseq: comment . declarationseq

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 12 (declarationseq)

    ident           go to state 20
    declarationseq  go to state 29
    declaration     go to state 22
    comment         go to state 23


State 24

   15 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 30

    $default  reduce using rule 17 (arr)

    arr  go to state 31


State 25

   14 declarations: COMMA . ident declarations

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident  go to state 32


State 26

   13 declaration: ident declarations .

    $default  reduce using rule 13 (declaration)


State 27

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS . BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 33


State 28

   10 declarationseq: declaration declarationseq .

    $default  reduce using rule 10 (declarationseq)


State 29

   11 declarationseq: comment declarationseq .

    $default  reduce using rule 11 (declarationseq)


State 30

   16 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 34


State 31

   15 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 35


State 32

   14 declarations: COMMA ident . declarations

    COLON  shift, and go to state 24
    COMMA  shift, and go to state 25

    declarations  go to state 36


State 33

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS . declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 12 (declarationseq)

    ident           go to state 20
    declarationseq  go to state 37
    declaration     go to state 22
    comment         go to state 23


State 34

   16 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 38


State 35

   15 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 36

   14 declarations: COMMA ident declarations .

    $default  reduce using rule 14 (declarations)


State 37

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 40


State 38

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 41


State 39

   15 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 15 (declarations)


State 40

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 42


State 41

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 43


State 42

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 53
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 43

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 16 (arr)


State 44

   25 ifstmt: IF . boolexpr THEN statements else ENDIF

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not              go to state 64
    boolexpr         go to state 65
    relationandexpr  go to state 66
    relationexpr     go to state 67


State 45

   28 while: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not              go to state 64
    boolexpr         go to state 68
    relationandexpr  go to state 66
    relationexpr     go to state 67


State 46

   29 do: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 69


State 47

   42 statement: CONTINUE .

    $default  reduce using rule 42 (statement)


State 48

   30 read: READ . vars

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident  go to state 51
    vars   go to state 70
    var    go to state 71


State 49

   31 write: WRITE . vars

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident  go to state 51
    vars   go to state 72
    var    go to state 71


State 50

   32 return: RETURN . expression

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 74
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 51

   67 var: ident .
   68    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 67 (var)


State 52

   21 statements: comment . statements

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 79
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 53

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 80


State 54

   36 statement: assignment .

    $default  reduce using rule 36 (statement)


State 55

   37 statement: ifstmt .

    $default  reduce using rule 37 (statement)


State 56

   38 statement: while .

    $default  reduce using rule 38 (statement)


State 57

   39 statement: do .

    $default  reduce using rule 39 (statement)


State 58

   40 statement: read .

    $default  reduce using rule 40 (statement)


State 59

   41 statement: write .

    $default  reduce using rule 41 (statement)


State 60

   43 statement: return .

    $default  reduce using rule 43 (statement)


State 61

   22 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 81


State 62

   24 assignment: var . ASSIGN expression

    ASSIGN  shift, and go to state 82


State 63

   69 not: NOT .

    $default  reduce using rule 69 (not)


State 64

   83 relationexpr: not . relationexproptions

    TRUE     shift, and go to state 83
    FALSE    shift, and go to state 84
    SUB      shift, and go to state 73
    L_PAREN  shift, and go to state 85

    L_PAREN   [reduce using rule 54 (neg)]
    $default  reduce using rule 54 (neg)

    expression           go to state 86
    multexpression       go to state 75
    neg                  go to state 76
    term                 go to state 77
    relationexproptions  go to state 87


State 65

   25 ifstmt: IF boolexpr . THEN statements else ENDIF

    THEN  shift, and go to state 88


State 66

   77 boolexpr: relationandexpr . boolexprseq

    OR  shift, and go to state 89

    $default  reduce using rule 79 (boolexprseq)

    boolexprseq  go to state 90


State 67

   80 relationandexpr: relationexpr . relationandexprseq

    AND  shift, and go to state 91

    $default  reduce using rule 82 (relationandexprseq)

    relationandexprseq  go to state 92


State 68

   28 while: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 69

   29 do: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 94
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 70

   30 read: READ vars .

    $default  reduce using rule 30 (read)


State 71

   33 vars: var . varcomma

    COMMA  shift, and go to state 95

    $default  reduce using rule 35 (varcomma)

    varcomma  go to state 96


State 72

   31 write: WRITE vars .

    $default  reduce using rule 31 (write)


State 73

   53 neg: SUB .

    $default  reduce using rule 53 (neg)


State 74

   32 return: RETURN expression .

    $default  reduce using rule 32 (return)


State 75

   44 expression: multexpression . expressionseq

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 47 (expressionseq)

    expressionseq  go to state 99


State 76

   57 term: neg . ident termmatch
   58     | neg . termoption

    IDENT      shift, and go to state 14
    NUMBER     shift, and go to state 100
    L_PAREN    shift, and go to state 101
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident       go to state 102
    termoption  go to state 103


State 77

   48 multexpression: term . termseq

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 52 (termseq)

    termseq  go to state 107


State 78

   68 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 108
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 79

   21 statements: comment statements .

    $default  reduce using rule 21 (statements)


State 80

    6 function: comments FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 81

   22 statements: statement SEMICOLON . statements

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 109
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 82

   24 assignment: var ASSIGN . expression

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 110
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 83

   85 relationexproptions: TRUE .

    $default  reduce using rule 85 (relationexproptions)


State 84

   86 relationexproptions: FALSE .

    $default  reduce using rule 86 (relationexproptions)


State 85

   87 relationexproptions: L_PAREN . boolexpr R_PAREN

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not              go to state 64
    boolexpr         go to state 111
    relationandexpr  go to state 66
    relationexpr     go to state 67


State 86

   84 relationexproptions: expression . comp expression

    EQ   shift, and go to state 112
    NEQ  shift, and go to state 113
    LT   shift, and go to state 114
    GT   shift, and go to state 115
    LTE  shift, and go to state 116
    GTE  shift, and go to state 117

    comp  go to state 118


State 87

   83 relationexpr: not relationexproptions .

    $default  reduce using rule 83 (relationexpr)


State 88

   25 ifstmt: IF boolexpr THEN . statements else ENDIF

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 119
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 89

   78 boolexprseq: OR . relationandexpr boolexprseq

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not              go to state 64
    relationandexpr  go to state 120
    relationexpr     go to state 67


State 90

   77 boolexpr: relationandexpr boolexprseq .

    $default  reduce using rule 77 (boolexpr)


State 91

   81 relationandexprseq: AND . relationexpr relationandexprseq

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not           go to state 64
    relationexpr  go to state 121


State 92

   80 relationandexpr: relationexpr relationandexprseq .

    $default  reduce using rule 80 (relationandexpr)


State 93

   28 while: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 122
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 94

   29 do: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 123


State 95

   34 varcomma: COMMA . var varcomma

    IDENT      shift, and go to state 14
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16

    ident  go to state 51
    var    go to state 124


State 96

   33 vars: var varcomma .

    $default  reduce using rule 33 (vars)


State 97

   46 expressionseq: SUB . multexpression expressionseq

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    multexpression  go to state 125
    neg             go to state 76
    term            go to state 77


State 98

   45 expressionseq: ADD . multexpression expressionseq

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    multexpression  go to state 126
    neg             go to state 76
    term            go to state 77


State 99

   44 expression: multexpression expressionseq .

    $default  reduce using rule 44 (expression)


State 100

   55 termoption: NUMBER .

    $default  reduce using rule 55 (termoption)


State 101

   56 termoption: L_PAREN . expression R_PAREN

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 127
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 102

   57 term: neg ident . termmatch

    L_PAREN           shift, and go to state 128
    L_SQUARE_BRACKET  shift, and go to state 129

    $default  reduce using rule 61 (termmatch)

    termmatch     go to state 130
    matchterm     go to state 131
    notmatchterm  go to state 132


State 103

   58 term: neg termoption .

    $default  reduce using rule 58 (term)


State 104

   49 termseq: MULT . term termseq

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    neg   go to state 76
    term  go to state 133


State 105

   50 termseq: DIV . term termseq

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    neg   go to state 76
    term  go to state 134


State 106

   51 termseq: MOD . term termseq

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    neg   go to state 76
    term  go to state 135


State 107

   48 multexpression: term termseq .

    $default  reduce using rule 48 (multexpression)


State 108

   68 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 136


State 109

   22 statements: statement SEMICOLON statements .

    $default  reduce using rule 22 (statements)


State 110

   24 assignment: var ASSIGN expression .

    $default  reduce using rule 24 (assignment)


State 111

   87 relationexproptions: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 137


State 112

   71 comp: EQ .

    $default  reduce using rule 71 (comp)


State 113

   72 comp: NEQ .

    $default  reduce using rule 72 (comp)


State 114

   73 comp: LT .

    $default  reduce using rule 73 (comp)


State 115

   74 comp: GT .

    $default  reduce using rule 74 (comp)


State 116

   75 comp: LTE .

    $default  reduce using rule 75 (comp)


State 117

   76 comp: GTE .

    $default  reduce using rule 76 (comp)


State 118

   84 relationexproptions: expression comp . expression

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 138
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 119

   25 ifstmt: IF boolexpr THEN statements . else ENDIF

    ELSE  shift, and go to state 139

    $default  reduce using rule 27 (else)

    else  go to state 140


State 120

   78 boolexprseq: OR relationandexpr . boolexprseq

    OR  shift, and go to state 89

    $default  reduce using rule 79 (boolexprseq)

    boolexprseq  go to state 141


State 121

   81 relationandexprseq: AND relationexpr . relationandexprseq

    AND  shift, and go to state 91

    $default  reduce using rule 82 (relationandexprseq)

    relationandexprseq  go to state 142


State 122

   28 while: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 143


State 123

   29 do: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 144


State 124

   34 varcomma: COMMA var . varcomma

    COMMA  shift, and go to state 95

    $default  reduce using rule 35 (varcomma)

    varcomma  go to state 145


State 125

   46 expressionseq: SUB multexpression . expressionseq

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 47 (expressionseq)

    expressionseq  go to state 146


State 126

   45 expressionseq: ADD multexpression . expressionseq

    SUB  shift, and go to state 97
    ADD  shift, and go to state 98

    $default  reduce using rule 47 (expressionseq)

    expressionseq  go to state 147


State 127

   56 termoption: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 148


State 128

   62 matchterm: L_PAREN . expressionlist R_PAREN

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 149
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77
    expressionlist  go to state 150


State 129

   63 notmatchterm: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 151
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 130

   57 term: neg ident termmatch .

    $default  reduce using rule 57 (term)


State 131

   59 termmatch: matchterm .

    $default  reduce using rule 59 (termmatch)


State 132

   60 termmatch: notmatchterm .

    $default  reduce using rule 60 (termmatch)


State 133

   49 termseq: MULT term . termseq

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 52 (termseq)

    termseq  go to state 152


State 134

   50 termseq: DIV term . termseq

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 52 (termseq)

    termseq  go to state 153


State 135

   51 termseq: MOD term . termseq

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 52 (termseq)

    termseq  go to state 154


State 136

   68 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 68 (var)


State 137

   87 relationexproptions: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 87 (relationexproptions)


State 138

   84 relationexproptions: expression comp expression .

    $default  reduce using rule 84 (relationexproptions)


State 139

   26 else: ELSE . statements

    IDENT      shift, and go to state 14
    IF         shift, and go to state 44
    WHILE      shift, and go to state 45
    DO         shift, and go to state 46
    CONTINUE   shift, and go to state 47
    READ       shift, and go to state 48
    WRITE      shift, and go to state 49
    RETURN     shift, and go to state 50
    NO_IDENT1  shift, and go to state 15
    NO_IDENT2  shift, and go to state 16
    COMMENT    shift, and go to state 1

    $default  reduce using rule 23 (statements)

    ident       go to state 51
    comment     go to state 52
    statements  go to state 155
    assignment  go to state 54
    ifstmt      go to state 55
    while       go to state 56
    do          go to state 57
    read        go to state 58
    write       go to state 59
    return      go to state 60
    statement   go to state 61
    var         go to state 62


State 140

   25 ifstmt: IF boolexpr THEN statements else . ENDIF

    ENDIF  shift, and go to state 156


State 141

   78 boolexprseq: OR relationandexpr boolexprseq .

    $default  reduce using rule 78 (boolexprseq)


State 142

   81 relationandexprseq: AND relationexpr relationandexprseq .

    $default  reduce using rule 81 (relationandexprseq)


State 143

   28 while: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (while)


State 144

   29 do: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT  shift, and go to state 63

    $default  reduce using rule 70 (not)

    not              go to state 64
    boolexpr         go to state 157
    relationandexpr  go to state 66
    relationexpr     go to state 67


State 145

   34 varcomma: COMMA var varcomma .

    $default  reduce using rule 34 (varcomma)


State 146

   46 expressionseq: SUB multexpression expressionseq .

    $default  reduce using rule 46 (expressionseq)


State 147

   45 expressionseq: ADD multexpression expressionseq .

    $default  reduce using rule 45 (expressionseq)


State 148

   56 termoption: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (termoption)


State 149

   64 expressionlist: expression . expressioncomma

    COMMA  shift, and go to state 158

    $default  reduce using rule 66 (expressioncomma)

    expressioncomma  go to state 159


State 150

   62 matchterm: L_PAREN expressionlist . R_PAREN

    R_PAREN  shift, and go to state 160


State 151

   63 notmatchterm: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 161


State 152

   49 termseq: MULT term termseq .

    $default  reduce using rule 49 (termseq)


State 153

   50 termseq: DIV term termseq .

    $default  reduce using rule 50 (termseq)


State 154

   51 termseq: MOD term termseq .

    $default  reduce using rule 51 (termseq)


State 155

   26 else: ELSE statements .

    $default  reduce using rule 26 (else)


State 156

   25 ifstmt: IF boolexpr THEN statements else ENDIF .

    $default  reduce using rule 25 (ifstmt)


State 157

   29 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 29 (do)


State 158

   65 expressioncomma: COMMA . expression expressioncomma

    SUB  shift, and go to state 73

    $default  reduce using rule 54 (neg)

    expression      go to state 162
    multexpression  go to state 75
    neg             go to state 76
    term            go to state 77


State 159

   64 expressionlist: expression expressioncomma .

    $default  reduce using rule 64 (expressionlist)


State 160

   62 matchterm: L_PAREN expressionlist R_PAREN .

    $default  reduce using rule 62 (matchterm)


State 161

   63 notmatchterm: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (notmatchterm)


State 162

   65 expressioncomma: COMMA expression . expressioncomma

    COMMA  shift, and go to state 158

    $default  reduce using rule 66 (expressioncomma)

    expressioncomma  go to state 163


State 163

   65 expressioncomma: COMMA expression expressioncomma .

    $default  reduce using rule 65 (expressioncomma)
