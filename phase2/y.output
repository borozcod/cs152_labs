Nonterminals useless in grammar

   neg


Terminals unused in grammar

   RETURN
   NO_IDENT1
   NO_IDENT2


Rules useless in grammar

   74 neg: SUB
   75    | %empty


State 89 conflicts: 3 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function '\n'

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    6 ident: IDENT

    7 declarationseq: declaration declarationseq
    8               | %empty

    9 declaration: ident declarations

   10 declarations: COMMA ident declarations
   11             | COLON arr INTEGER SEMICOLON

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   13    | %empty

   14 comment: COMMENT

   15 statements: comment statements
   16           | statement SEMICOLON statements
   17           | %empty

   18 assignment: var ASSIGN expression

   19 ifstmt: IF boolexpr THEN statements else ENDIF

   20 else: ELSE statements
   21     | %empty

   22 while: WHILE boolexpr BEGINLOOP statements ENDLOOP

   23 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr

   24 read: READ vars

   25 write: WRITE vars

   26 return: expression

   27 vars: var varcomma

   28 varcomma: COMMA var varcomma
   29         | %empty

   30 invalid: var NO_EQ

   31 statement: invalid
   32          | assignment
   33          | ifstmt
   34          | while
   35          | do
   36          | read
   37          | write
   38          | CONTINUE
   39          | return

   40 expression: multexpression expressionseq

   41 expressionseq: ADD multexpression expressionseq
   42              | SUB multexpression expressionseq
   43              | %empty

   44 multexpression: term termseq

   45 termseq: MULT term termseq
   46        | DIV term termseq
   47        | MOD term termseq
   48        | %empty

   49 termoption: var
   50           | NUMBER
   51           | L_PAREN expression R_PAREN

   52 term: termoption

   53 var: ident
   54    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   55 not: NOT
   56    | %empty

   57 comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 boolexpr: relationandexpr boolexprseq

   64 boolexprseq: OR relationandexpr boolexprseq
   65            | %empty

   66 relationandexpr: relationexpr relationandexprseq

   67 relationandexprseq: AND relationexpr relationandexprseq
   68                   | %empty

   69 relationexpr: not relationexproptions

   70 relationexproptions: expression comp expression
   71                    | TRUE
   72                    | FALSE
   73                    | L_PAREN boolexpr R_PAREN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3 4
error (256)
IDENT (258) 6
NO_EQ (259) 30
FUNCTION (260) 5
BEGIN_PARAMS (261) 5
END_PARAMS (262) 5
BEGIN_LOCALS (263) 5
END_LOCALS (264) 5
BEGIN_BODY (265) 5
END_BODY (266) 5
INTEGER (267) 11
ARRAY (268) 12
OF (269) 12
IF (270) 19
THEN (271) 19
ENDIF (272) 19
ELSE (273) 20
WHILE (274) 22 23
DO (275) 23
BEGINLOOP (276) 22 23
ENDLOOP (277) 22 23
CONTINUE (278) 38
READ (279) 24
WRITE (280) 25
AND (281) 67
OR (282) 64
NOT (283) 55
TRUE (284) 71
FALSE (285) 72
RETURN (286)
SUB (287) 42
ADD (288) 41
MULT (289) 45
DIV (290) 46
MOD (291) 47
EQ (292) 57
NEQ (293) 58
LT (294) 59
GT (295) 60
LTE (296) 61
GTE (297) 62
NUMBER (298) 12 50
SEMICOLON (299) 5 11 16
COLON (300) 11
COMMA (301) 10 28
L_PAREN (302) 51 73
R_PAREN (303) 51 73
L_SQUARE_BRACKET (304) 12 54
R_SQUARE_BRACKET (305) 12 54
ASSIGN (306) 18
NO_IDENT1 (307)
NO_IDENT2 (308)
COMMENT (309) 14


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
input (57)
    on left: 1 2, on right: 0 2
line (58)
    on left: 3 4, on right: 1 2
function (59)
    on left: 5, on right: 4
ident (60)
    on left: 6, on right: 5 9 10 53 54
declarationseq (61)
    on left: 7 8, on right: 5 7
declaration (62)
    on left: 9, on right: 7
declarations (63)
    on left: 10 11, on right: 9 10
arr (64)
    on left: 12 13, on right: 11
comment (65)
    on left: 14, on right: 15
statements (66)
    on left: 15 16 17, on right: 5 15 16 19 20 22 23
assignment (67)
    on left: 18, on right: 32
ifstmt (68)
    on left: 19, on right: 33
else (69)
    on left: 20 21, on right: 19
while (70)
    on left: 22, on right: 34
do (71)
    on left: 23, on right: 35
read (72)
    on left: 24, on right: 36
write (73)
    on left: 25, on right: 37
return (74)
    on left: 26, on right: 39
vars (75)
    on left: 27, on right: 24 25
varcomma (76)
    on left: 28 29, on right: 27 28
invalid (77)
    on left: 30, on right: 31
statement (78)
    on left: 31 32 33 34 35 36 37 38 39, on right: 16
expression (79)
    on left: 40, on right: 18 26 51 54 70
expressionseq (80)
    on left: 41 42 43, on right: 40 41 42
multexpression (81)
    on left: 44, on right: 40 41 42
termseq (82)
    on left: 45 46 47 48, on right: 44 45 46 47
termoption (83)
    on left: 49 50 51, on right: 52
term (84)
    on left: 52, on right: 44 45 46 47
var (85)
    on left: 53 54, on right: 18 27 28 30 49
not (86)
    on left: 55 56, on right: 69
comp (87)
    on left: 57 58 59 60 61 62, on right: 70
boolexpr (88)
    on left: 63, on right: 19 22 23 73
boolexprseq (89)
    on left: 64 65, on right: 63 64
relationandexpr (90)
    on left: 66, on right: 63 64
relationandexprseq (91)
    on left: 67 68, on right: 66 67
relationexpr (92)
    on left: 69, on right: 66 67
relationexproptions (93)
    on left: 70 71 72 73, on right: 69


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    input     go to state 3
    line      go to state 4
    function  go to state 5


State 1

    5 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 8
    '\n'  shift, and go to state 9


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . '\n'

    '\n'  shift, and go to state 10


State 6

    6 ident: IDENT .

    $default  reduce using rule 6 (ident)


State 7

    5 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 11


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 input: input '\n' . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    line      go to state 12
    function  go to state 5


State 10

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


State 11

    5 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 12

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 13

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 15
    declaration     go to state 16


State 14

    9 declaration: ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 19


State 15

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq . END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 20


State 16

    7 declarationseq: declaration . declarationseq

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 21
    declaration     go to state 16


State 17

   11 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 22

    $default  reduce using rule 13 (arr)

    arr  go to state 23


State 18

   10 declarations: COMMA . ident declarations

    IDENT  shift, and go to state 6

    ident  go to state 24


State 19

    9 declaration: ident declarations .

    $default  reduce using rule 9 (declaration)


State 20

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS . BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

    7 declarationseq: declaration declarationseq .

    $default  reduce using rule 7 (declarationseq)


State 22

   12 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   11 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 27


State 24

   10 declarations: COMMA ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 28


State 25

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS . declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 29
    declaration     go to state 16


State 26

   12 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 30


State 27

   11 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 28

   10 declarations: COMMA ident declarations .

    $default  reduce using rule 10 (declarations)


State 29

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

   11 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 11 (declarations)


State 32

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 33

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 35


State 34

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 47
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 35

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 12 (arr)


State 36

   19 ifstmt: IF . boolexpr THEN statements else ENDIF

    NOT  shift, and go to state 62

    $default  reduce using rule 56 (not)

    not              go to state 63
    boolexpr         go to state 64
    relationandexpr  go to state 65
    relationexpr     go to state 66


State 37

   22 while: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 62

    $default  reduce using rule 56 (not)

    not              go to state 63
    boolexpr         go to state 67
    relationandexpr  go to state 65
    relationexpr     go to state 66


State 38

   23 do: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 68


State 39

   38 statement: CONTINUE .

    $default  reduce using rule 38 (statement)


State 40

   24 read: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 45
    vars   go to state 69
    var    go to state 70


State 41

   25 write: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 45
    vars   go to state 71
    var    go to state 70


State 42

   50 termoption: NUMBER .

    $default  reduce using rule 50 (termoption)


State 43

   51 termoption: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    expression      go to state 72
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 44

   14 comment: COMMENT .

    $default  reduce using rule 14 (comment)


State 45

   53 var: ident .
   54    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 53 (var)


State 46

   15 statements: comment . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 75
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 47

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 76


State 48

   32 statement: assignment .

    $default  reduce using rule 32 (statement)


State 49

   33 statement: ifstmt .

    $default  reduce using rule 33 (statement)


State 50

   34 statement: while .

    $default  reduce using rule 34 (statement)


State 51

   35 statement: do .

    $default  reduce using rule 35 (statement)


State 52

   36 statement: read .

    $default  reduce using rule 36 (statement)


State 53

   37 statement: write .

    $default  reduce using rule 37 (statement)


State 54

   39 statement: return .

    $default  reduce using rule 39 (statement)


State 55

   31 statement: invalid .

    $default  reduce using rule 31 (statement)


State 56

   16 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 77


State 57

   26 return: expression .

    $default  reduce using rule 26 (return)


State 58

   40 expression: multexpression . expressionseq

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 43 (expressionseq)

    expressionseq  go to state 80


State 59

   52 term: termoption .

    $default  reduce using rule 52 (term)


State 60

   44 multexpression: term . termseq

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 48 (termseq)

    termseq  go to state 84


State 61

   18 assignment: var . ASSIGN expression
   30 invalid: var . NO_EQ
   49 termoption: var .

    NO_EQ   shift, and go to state 85
    ASSIGN  shift, and go to state 86

    $default  reduce using rule 49 (termoption)


State 62

   55 not: NOT .

    $default  reduce using rule 55 (not)


State 63

   69 relationexpr: not . relationexproptions

    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 87
    FALSE    shift, and go to state 88
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 89

    ident                go to state 45
    expression           go to state 90
    multexpression       go to state 58
    termoption           go to state 59
    term                 go to state 60
    var                  go to state 73
    relationexproptions  go to state 91


State 64

   19 ifstmt: IF boolexpr . THEN statements else ENDIF

    THEN  shift, and go to state 92


State 65

   63 boolexpr: relationandexpr . boolexprseq

    OR  shift, and go to state 93

    $default  reduce using rule 65 (boolexprseq)

    boolexprseq  go to state 94


State 66

   66 relationandexpr: relationexpr . relationandexprseq

    AND  shift, and go to state 95

    $default  reduce using rule 68 (relationandexprseq)

    relationandexprseq  go to state 96


State 67

   22 while: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


State 68

   23 do: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 98
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 69

   24 read: READ vars .

    $default  reduce using rule 24 (read)


State 70

   27 vars: var . varcomma

    COMMA  shift, and go to state 99

    $default  reduce using rule 29 (varcomma)

    varcomma  go to state 100


State 71

   25 write: WRITE vars .

    $default  reduce using rule 25 (write)


State 72

   51 termoption: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101


State 73

   49 termoption: var .

    $default  reduce using rule 49 (termoption)


State 74

   54 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    expression      go to state 102
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 75

   15 statements: comment statements .

    $default  reduce using rule 15 (statements)


State 76

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 77

   16 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 103
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 78

   42 expressionseq: SUB . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    multexpression  go to state 104
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 79

   41 expressionseq: ADD . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    multexpression  go to state 105
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 80

   40 expression: multexpression expressionseq .

    $default  reduce using rule 40 (expression)


State 81

   45 termseq: MULT . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 45
    termoption  go to state 59
    term        go to state 106
    var         go to state 73


State 82

   46 termseq: DIV . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 45
    termoption  go to state 59
    term        go to state 107
    var         go to state 73


State 83

   47 termseq: MOD . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 45
    termoption  go to state 59
    term        go to state 108
    var         go to state 73


State 84

   44 multexpression: term termseq .

    $default  reduce using rule 44 (multexpression)


State 85

   30 invalid: var NO_EQ .

    $default  reduce using rule 30 (invalid)


State 86

   18 assignment: var ASSIGN . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    expression      go to state 109
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 87

   71 relationexproptions: TRUE .

    $default  reduce using rule 71 (relationexproptions)


State 88

   72 relationexproptions: FALSE .

    $default  reduce using rule 72 (relationexproptions)


State 89

   51 termoption: L_PAREN . expression R_PAREN
   73 relationexproptions: L_PAREN . boolexpr R_PAREN

    IDENT    shift, and go to state 6
    NOT      shift, and go to state 62
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    IDENT     [reduce using rule 56 (not)]
    NUMBER    [reduce using rule 56 (not)]
    L_PAREN   [reduce using rule 56 (not)]
    $default  reduce using rule 56 (not)

    ident            go to state 45
    expression       go to state 72
    multexpression   go to state 58
    termoption       go to state 59
    term             go to state 60
    var              go to state 73
    not              go to state 63
    boolexpr         go to state 110
    relationandexpr  go to state 65
    relationexpr     go to state 66


State 90

   70 relationexproptions: expression . comp expression

    EQ   shift, and go to state 111
    NEQ  shift, and go to state 112
    LT   shift, and go to state 113
    GT   shift, and go to state 114
    LTE  shift, and go to state 115
    GTE  shift, and go to state 116

    comp  go to state 117


State 91

   69 relationexpr: not relationexproptions .

    $default  reduce using rule 69 (relationexpr)


State 92

   19 ifstmt: IF boolexpr THEN . statements else ENDIF

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 118
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 93

   64 boolexprseq: OR . relationandexpr boolexprseq

    NOT  shift, and go to state 62

    $default  reduce using rule 56 (not)

    not              go to state 63
    relationandexpr  go to state 119
    relationexpr     go to state 66


State 94

   63 boolexpr: relationandexpr boolexprseq .

    $default  reduce using rule 63 (boolexpr)


State 95

   67 relationandexprseq: AND . relationexpr relationandexprseq

    NOT  shift, and go to state 62

    $default  reduce using rule 56 (not)

    not           go to state 63
    relationexpr  go to state 120


State 96

   66 relationandexpr: relationexpr relationandexprseq .

    $default  reduce using rule 66 (relationandexpr)


State 97

   22 while: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 121
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 98

   23 do: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 122


State 99

   28 varcomma: COMMA . var varcomma

    IDENT  shift, and go to state 6

    ident  go to state 45
    var    go to state 123


State 100

   27 vars: var varcomma .

    $default  reduce using rule 27 (vars)


State 101

   51 termoption: L_PAREN expression R_PAREN .

    $default  reduce using rule 51 (termoption)


State 102

   54 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 103

   16 statements: statement SEMICOLON statements .

    $default  reduce using rule 16 (statements)


State 104

   42 expressionseq: SUB multexpression . expressionseq

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 43 (expressionseq)

    expressionseq  go to state 125


State 105

   41 expressionseq: ADD multexpression . expressionseq

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 43 (expressionseq)

    expressionseq  go to state 126


State 106

   45 termseq: MULT term . termseq

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 48 (termseq)

    termseq  go to state 127


State 107

   46 termseq: DIV term . termseq

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 48 (termseq)

    termseq  go to state 128


State 108

   47 termseq: MOD term . termseq

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 48 (termseq)

    termseq  go to state 129


State 109

   18 assignment: var ASSIGN expression .

    $default  reduce using rule 18 (assignment)


State 110

   73 relationexproptions: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 130


State 111

   57 comp: EQ .

    $default  reduce using rule 57 (comp)


State 112

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


State 113

   59 comp: LT .

    $default  reduce using rule 59 (comp)


State 114

   60 comp: GT .

    $default  reduce using rule 60 (comp)


State 115

   61 comp: LTE .

    $default  reduce using rule 61 (comp)


State 116

   62 comp: GTE .

    $default  reduce using rule 62 (comp)


State 117

   70 relationexproptions: expression comp . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 45
    expression      go to state 131
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 73


State 118

   19 ifstmt: IF boolexpr THEN statements . else ENDIF

    ELSE  shift, and go to state 132

    $default  reduce using rule 21 (else)

    else  go to state 133


State 119

   64 boolexprseq: OR relationandexpr . boolexprseq

    OR  shift, and go to state 93

    $default  reduce using rule 65 (boolexprseq)

    boolexprseq  go to state 134


State 120

   67 relationandexprseq: AND relationexpr . relationandexprseq

    AND  shift, and go to state 95

    $default  reduce using rule 68 (relationandexprseq)

    relationandexprseq  go to state 135


State 121

   22 while: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 122

   23 do: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 137


State 123

   28 varcomma: COMMA var . varcomma

    COMMA  shift, and go to state 99

    $default  reduce using rule 29 (varcomma)

    varcomma  go to state 138


State 124

   54 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 54 (var)


State 125

   42 expressionseq: SUB multexpression expressionseq .

    $default  reduce using rule 42 (expressionseq)


State 126

   41 expressionseq: ADD multexpression expressionseq .

    $default  reduce using rule 41 (expressionseq)


State 127

   45 termseq: MULT term termseq .

    $default  reduce using rule 45 (termseq)


State 128

   46 termseq: DIV term termseq .

    $default  reduce using rule 46 (termseq)


State 129

   47 termseq: MOD term termseq .

    $default  reduce using rule 47 (termseq)


State 130

   73 relationexproptions: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 73 (relationexproptions)


State 131

   70 relationexproptions: expression comp expression .

    $default  reduce using rule 70 (relationexproptions)


State 132

   20 else: ELSE . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43
    COMMENT   shift, and go to state 44

    $default  reduce using rule 17 (statements)

    ident           go to state 45
    comment         go to state 46
    statements      go to state 139
    assignment      go to state 48
    ifstmt          go to state 49
    while           go to state 50
    do              go to state 51
    read            go to state 52
    write           go to state 53
    return          go to state 54
    invalid         go to state 55
    statement       go to state 56
    expression      go to state 57
    multexpression  go to state 58
    termoption      go to state 59
    term            go to state 60
    var             go to state 61


State 133

   19 ifstmt: IF boolexpr THEN statements else . ENDIF

    ENDIF  shift, and go to state 140


State 134

   64 boolexprseq: OR relationandexpr boolexprseq .

    $default  reduce using rule 64 (boolexprseq)


State 135

   67 relationandexprseq: AND relationexpr relationandexprseq .

    $default  reduce using rule 67 (relationandexprseq)


State 136

   22 while: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (while)


State 137

   23 do: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT  shift, and go to state 62

    $default  reduce using rule 56 (not)

    not              go to state 63
    boolexpr         go to state 141
    relationandexpr  go to state 65
    relationexpr     go to state 66


State 138

   28 varcomma: COMMA var varcomma .

    $default  reduce using rule 28 (varcomma)


State 139

   20 else: ELSE statements .

    $default  reduce using rule 20 (else)


State 140

   19 ifstmt: IF boolexpr THEN statements else ENDIF .

    $default  reduce using rule 19 (ifstmt)


State 141

   23 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 23 (do)
