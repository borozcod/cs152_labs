Terminals unused in grammar

   IF
   THEN
   ENDIF
   ELSE
   WHILE
   DO
   BEGINLOOP
   ENDLOOP
   CONTINUE
   READ
   WRITE
   AND
   OR
   NOT
   TRUE
   FALSE
   RETURN
   SUB
   ADD
   MULT
   DIV
   MOD
   EQ
   NEQ
   LT
   GT
   LTE
   GTE
   L_PAREN
   R_PAREN
   NO_IDENT1
   NO_IDENT2
   COMMENT


State 13 conflicts: 1 shift/reduce, 2 reduce/reduce
State 16 conflicts: 2 shift/reduce, 2 reduce/reduce
State 21 conflicts: 1 shift/reduce, 5 reduce/reduce
State 25 conflicts: 1 shift/reduce, 2 reduce/reduce
State 29 conflicts: 2 shift/reduce, 2 reduce/reduce
State 40 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function '\n'

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    6 beginbody: statement SEMICOLON
    7          | beginbody beginbody

    8 ident: IDENT

    9 identifiers: ident
   10            | %empty

   11 declaration: identifiers declarations
   12            | declaration declaration
   13            | %empty

   14 declarations: COMMA identifiers declarations
   15             | COLON arr INTEGER SEMICOLON

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   17    | %empty

   18 statement: ident ASSIGN NUMBER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3 4
error (256)
IDENT (258) 8
FUNCTION (259) 5
BEGIN_PARAMS (260) 5
END_PARAMS (261) 5
BEGIN_LOCALS (262) 5
END_LOCALS (263) 5
BEGIN_BODY (264) 5
END_BODY (265) 5
INTEGER (266) 15
ARRAY (267) 16
OF (268) 16
IF (269)
THEN (270)
ENDIF (271)
ELSE (272)
WHILE (273)
DO (274)
BEGINLOOP (275)
ENDLOOP (276)
CONTINUE (277)
READ (278)
WRITE (279)
AND (280)
OR (281)
NOT (282)
TRUE (283)
FALSE (284)
RETURN (285)
SUB (286)
ADD (287)
MULT (288)
DIV (289)
MOD (290)
EQ (291)
NEQ (292)
LT (293)
GT (294)
LTE (295)
GTE (296)
NUMBER (297) 16 18
SEMICOLON (298) 5 6 15
COLON (299) 15
COMMA (300) 14
L_PAREN (301)
R_PAREN (302)
L_SQUARE_BRACKET (303) 16
R_SQUARE_BRACKET (304) 16
ASSIGN (305) 18
NO_IDENT1 (306)
NO_IDENT2 (307)
COMMENT (308)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1 2, on right: 0 2
line (57)
    on left: 3 4, on right: 1 2
function (58)
    on left: 5, on right: 4
beginbody (59)
    on left: 6 7, on right: 5 7
ident (60)
    on left: 8, on right: 5 9 18
identifiers (61)
    on left: 9 10, on right: 11 14
declaration (62)
    on left: 11 12 13, on right: 5 12
declarations (63)
    on left: 14 15, on right: 11 14
arr (64)
    on left: 16 17, on right: 15
statement (65)
    on left: 18, on right: 6


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    input     go to state 3
    line      go to state 4
    function  go to state 5


State 1

    5 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 8
    '\n'  shift, and go to state 9


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . '\n'

    '\n'  shift, and go to state 10


State 6

    8 ident: IDENT .

    $default  reduce using rule 8 (ident)


State 7

    5 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    SEMICOLON  shift, and go to state 11


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 input: input '\n' . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    line      go to state 12
    function  go to state 5


State 10

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


State 11

    5 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 12

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 13

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    IDENT  shift, and go to state 6

    IDENT       [reduce using rule 13 (declaration)]
    END_PARAMS  reduce using rule 13 (declaration)
    COLON       reduce using rule 10 (identifiers)
    COLON       [reduce using rule 13 (declaration)]
    COMMA       reduce using rule 10 (identifiers)
    COMMA       [reduce using rule 13 (declaration)]
    $default    reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 15
    declaration  go to state 16


State 14

    9 identifiers: ident .

    $default  reduce using rule 9 (identifiers)


State 15

   11 declaration: identifiers . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 19


State 16

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration . END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY
   12 declaration: declaration . declaration

    IDENT       shift, and go to state 6
    END_PARAMS  shift, and go to state 20

    IDENT       [reduce using rule 13 (declaration)]
    END_PARAMS  [reduce using rule 13 (declaration)]
    COLON       reduce using rule 10 (identifiers)
    COLON       [reduce using rule 13 (declaration)]
    COMMA       reduce using rule 10 (identifiers)
    COMMA       [reduce using rule 13 (declaration)]
    $default    reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 15
    declaration  go to state 21


State 17

   15 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 22

    $default  reduce using rule 17 (arr)

    arr  go to state 23


State 18

   14 declarations: COMMA . identifiers declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 24


State 19

   11 declaration: identifiers declarations .

    $default  reduce using rule 11 (declaration)


State 20

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS . BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

   12 declaration: declaration . declaration
   12            | declaration declaration .

    IDENT  shift, and go to state 6

    IDENT       [reduce using rule 12 (declaration)]
    IDENT       [reduce using rule 13 (declaration)]
    END_PARAMS  reduce using rule 12 (declaration)
    END_PARAMS  [reduce using rule 13 (declaration)]
    END_LOCALS  reduce using rule 12 (declaration)
    END_LOCALS  [reduce using rule 13 (declaration)]
    COLON       reduce using rule 10 (identifiers)
    COLON       [reduce using rule 12 (declaration)]
    COLON       [reduce using rule 13 (declaration)]
    COMMA       reduce using rule 10 (identifiers)
    COMMA       [reduce using rule 12 (declaration)]
    COMMA       [reduce using rule 13 (declaration)]
    $default    reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 15
    declaration  go to state 21


State 22

   16 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   15 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 27


State 24

   14 declarations: COMMA identifiers . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 28


State 25

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS . declaration END_LOCALS BEGIN_BODY beginbody END_BODY

    IDENT  shift, and go to state 6

    IDENT       [reduce using rule 13 (declaration)]
    END_LOCALS  reduce using rule 13 (declaration)
    COLON       reduce using rule 10 (identifiers)
    COLON       [reduce using rule 13 (declaration)]
    COMMA       reduce using rule 10 (identifiers)
    COMMA       [reduce using rule 13 (declaration)]
    $default    reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 15
    declaration  go to state 29


State 26

   16 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 30


State 27

   15 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 28

   14 declarations: COMMA identifiers declarations .

    $default  reduce using rule 14 (declarations)


State 29

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration . END_LOCALS BEGIN_BODY beginbody END_BODY
   12 declaration: declaration . declaration

    IDENT       shift, and go to state 6
    END_LOCALS  shift, and go to state 32

    IDENT       [reduce using rule 13 (declaration)]
    END_LOCALS  [reduce using rule 13 (declaration)]
    COLON       reduce using rule 10 (identifiers)
    COLON       [reduce using rule 13 (declaration)]
    COMMA       reduce using rule 10 (identifiers)
    COMMA       [reduce using rule 13 (declaration)]
    $default    reduce using rule 10 (identifiers)

    ident        go to state 14
    identifiers  go to state 15
    declaration  go to state 21


State 30

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

   15 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 15 (declarations)


State 32

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS . BEGIN_BODY beginbody END_BODY

    BEGIN_BODY  shift, and go to state 34


State 33

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 35


State 34

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY . beginbody END_BODY

    IDENT  shift, and go to state 6

    beginbody  go to state 36
    ident      go to state 37
    statement  go to state 38


State 35

   16 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 16 (arr)


State 36

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody . END_BODY
    7 beginbody: beginbody . beginbody

    IDENT     shift, and go to state 6
    END_BODY  shift, and go to state 39

    beginbody  go to state 40
    ident      go to state 37
    statement  go to state 38


State 37

   18 statement: ident . ASSIGN NUMBER

    ASSIGN  shift, and go to state 41


State 38

    6 beginbody: statement . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 39

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declaration END_PARAMS BEGIN_LOCALS declaration END_LOCALS BEGIN_BODY beginbody END_BODY .

    $default  reduce using rule 5 (function)


State 40

    7 beginbody: beginbody . beginbody
    7          | beginbody beginbody .

    IDENT  shift, and go to state 6

    IDENT     [reduce using rule 7 (beginbody)]
    $default  reduce using rule 7 (beginbody)

    beginbody  go to state 40
    ident      go to state 37
    statement  go to state 38


State 41

   18 statement: ident ASSIGN . NUMBER

    NUMBER  shift, and go to state 43


State 42

    6 beginbody: statement SEMICOLON .

    $default  reduce using rule 6 (beginbody)


State 43

   18 statement: ident ASSIGN NUMBER .

    $default  reduce using rule 18 (statement)
