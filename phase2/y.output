Terminals unused in grammar

   EQUAL


State 0 conflicts: 1 shift/reduce
State 5 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function line
    5     | %empty

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    7 ident: NO_IDENT1
    8      | NO_IDENT2
    9      | IDENT

   10 declarationseq: declaration declarationseq
   11               | %empty

   12 declaration: ident declarations

   13 declarations: COMMA ident declarations
   14             | COLON arr INTEGER SEMICOLON

   15 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   16    | %empty

   17 comment: COMMENT

   18 statements: comment statements
   19           | statement SEMICOLON statements
   20           | %empty

   21 assignment: var ASSIGN expression

   22 ifstmt: IF boolexpr THEN statements else ENDIF

   23 else: ELSE statements
   24     | %empty

   25 while: WHILE boolexpr BEGINLOOP statements ENDLOOP

   26 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr

   27 read: READ vars

   28 write: WRITE vars

   29 return: RETURN expression

   30 vars: var varcomma

   31 varcomma: COMMA var varcomma
   32         | %empty

   33 statement: assignment
   34          | ifstmt
   35          | while
   36          | do
   37          | read
   38          | write
   39          | CONTINUE
   40          | return

   41 expression: multexpression expressionseq

   42 expressionseq: ADD multexpression expressionseq
   43              | SUB multexpression expressionseq
   44              | %empty

   45 multexpression: term termseq

   46 termseq: MULT term termseq
   47        | DIV term termseq
   48        | MOD term termseq
   49        | %empty

   50 neg: SUB
   51    | %empty

   52 termoption: NUMBER
   53           | L_PAREN expression R_PAREN

   54 term: neg ident termmatch
   55     | neg termoption

   56 termmatch: matchterm
   57          | notmatchterm
   58          | %empty

   59 matchterm: L_PAREN expressionlist R_PAREN

   60 notmatchterm: L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   61 expressionlist: expression expressioncomma

   62 expressioncomma: COMMA expression expressioncomma
   63                | %empty

   64 var: ident
   65    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   66 not: NOT
   67    | %empty

   68 comp: EQ
   69     | NEQ
   70     | LT
   71     | GT
   72     | LTE
   73     | GTE

   74 boolexpr: relationandexpr boolexprseq

   75 boolexprseq: OR relationandexpr boolexprseq
   76            | %empty

   77 relationandexpr: relationexpr relationandexprseq

   78 relationandexprseq: AND relationexpr relationandexprseq
   79                   | %empty

   80 relationexpr: not relationexproptions

   81 relationexproptions: expression comp expression
   82                    | TRUE
   83                    | FALSE
   84                    | L_PAREN boolexpr R_PAREN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3
error (256)
IDENT (258) 9
EQUAL (259)
FUNCTION (260) 6
BEGIN_PARAMS (261) 6
END_PARAMS (262) 6
BEGIN_LOCALS (263) 6
END_LOCALS (264) 6
BEGIN_BODY (265) 6
END_BODY (266) 6
INTEGER (267) 14
ARRAY (268) 15
OF (269) 15
IF (270) 22
THEN (271) 22
ENDIF (272) 22
ELSE (273) 23
WHILE (274) 25 26
DO (275) 26
BEGINLOOP (276) 25 26
ENDLOOP (277) 25 26
CONTINUE (278) 39
READ (279) 27
WRITE (280) 28
AND (281) 78
OR (282) 75
NOT (283) 66
TRUE (284) 82
FALSE (285) 83
RETURN (286) 29
SUB (287) 43 50
ADD (288) 42
MULT (289) 46
DIV (290) 47
MOD (291) 48
EQ (292) 68
NEQ (293) 69
LT (294) 70
GT (295) 71
LTE (296) 72
GTE (297) 73
NUMBER (298) 15 52
SEMICOLON (299) 6 14 19
COLON (300) 14
COMMA (301) 13 31 62
L_PAREN (302) 53 59 84
R_PAREN (303) 53 59 84
L_SQUARE_BRACKET (304) 15 60 65
R_SQUARE_BRACKET (305) 15 60 65
ASSIGN (306) 21
NO_IDENT1 (307) 7
NO_IDENT2 (308) 8
COMMENT (309) 17


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
input (57)
    on left: 1 2, on right: 0 2
line (58)
    on left: 3 4 5, on right: 1 2 4
function (59)
    on left: 6, on right: 4
ident (60)
    on left: 7 8 9, on right: 6 12 13 54 64 65
declarationseq (61)
    on left: 10 11, on right: 6 10
declaration (62)
    on left: 12, on right: 10
declarations (63)
    on left: 13 14, on right: 12 13
arr (64)
    on left: 15 16, on right: 14
comment (65)
    on left: 17, on right: 18
statements (66)
    on left: 18 19 20, on right: 6 18 19 22 23 25 26
assignment (67)
    on left: 21, on right: 33
ifstmt (68)
    on left: 22, on right: 34
else (69)
    on left: 23 24, on right: 22
while (70)
    on left: 25, on right: 35
do (71)
    on left: 26, on right: 36
read (72)
    on left: 27, on right: 37
write (73)
    on left: 28, on right: 38
return (74)
    on left: 29, on right: 40
vars (75)
    on left: 30, on right: 27 28
varcomma (76)
    on left: 31 32, on right: 30 31
statement (77)
    on left: 33 34 35 36 37 38 39 40, on right: 19
expression (78)
    on left: 41, on right: 21 29 53 60 61 62 65 81
expressionseq (79)
    on left: 42 43 44, on right: 41 42 43
multexpression (80)
    on left: 45, on right: 41 42 43
termseq (81)
    on left: 46 47 48 49, on right: 45 46 47 48
neg (82)
    on left: 50 51, on right: 54 55
termoption (83)
    on left: 52 53, on right: 55
term (84)
    on left: 54 55, on right: 45 46 47 48
termmatch (85)
    on left: 56 57 58, on right: 54
matchterm (86)
    on left: 59, on right: 56
notmatchterm (87)
    on left: 60, on right: 57
expressionlist (88)
    on left: 61, on right: 59
expressioncomma (89)
    on left: 62 63, on right: 61 62
var (90)
    on left: 64 65, on right: 21 30 31
not (91)
    on left: 66 67, on right: 80
comp (92)
    on left: 68 69 70 71 72 73, on right: 81
boolexpr (93)
    on left: 74, on right: 22 25 26 84
boolexprseq (94)
    on left: 75 76, on right: 74 75
relationandexpr (95)
    on left: 77, on right: 74 75
relationandexprseq (96)
    on left: 78 79, on right: 77 78
relationexpr (97)
    on left: 80, on right: 77 78
relationexproptions (98)
    on left: 81 82 83 84, on right: 80


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    input     go to state 3
    line      go to state 4
    function  go to state 5


State 1

    6 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident  go to state 9


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 10
    '\n'  shift, and go to state 11


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    line      go to state 12
    function  go to state 5


State 6

    9 ident: IDENT .

    $default  reduce using rule 9 (ident)


State 7

    7 ident: NO_IDENT1 .

    $default  reduce using rule 7 (ident)


State 8

    8 ident: NO_IDENT2 .

    $default  reduce using rule 8 (ident)


State 9

    6 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 13


State 10

    0 $accept: input $end .

    $default  accept


State 11

    2 input: input '\n' . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    '\n'      [reduce using rule 5 (line)]
    $default  reduce using rule 5 (line)

    line      go to state 14
    function  go to state 5


State 12

    4 line: function line .

    $default  reduce using rule 4 (line)


State 13

    6 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 15


State 14

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 15

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    $default  reduce using rule 11 (declarationseq)

    ident           go to state 16
    declarationseq  go to state 17
    declaration     go to state 18


State 16

   12 declaration: ident . declarations

    COLON  shift, and go to state 19
    COMMA  shift, and go to state 20

    declarations  go to state 21


State 17

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq . END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 22


State 18

   10 declarationseq: declaration . declarationseq

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    $default  reduce using rule 11 (declarationseq)

    ident           go to state 16
    declarationseq  go to state 23
    declaration     go to state 18


State 19

   14 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 24

    $default  reduce using rule 16 (arr)

    arr  go to state 25


State 20

   13 declarations: COMMA . ident declarations

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident  go to state 26


State 21

   12 declaration: ident declarations .

    $default  reduce using rule 12 (declaration)


State 22

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS . BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 23

   10 declarationseq: declaration declarationseq .

    $default  reduce using rule 10 (declarationseq)


State 24

   15 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 28


State 25

   14 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 29


State 26

   13 declarations: COMMA ident . declarations

    COLON  shift, and go to state 19
    COMMA  shift, and go to state 20

    declarations  go to state 30


State 27

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS . declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    $default  reduce using rule 11 (declarationseq)

    ident           go to state 16
    declarationseq  go to state 31
    declaration     go to state 18


State 28

   15 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 32


State 29

   14 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 30

   13 declarations: COMMA ident declarations .

    $default  reduce using rule 13 (declarations)


State 31

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 34


State 32

   15 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 35


State 33

   14 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 14 (declarations)


State 34

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 36


State 35

   15 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 37


State 36

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 48
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 37

   15 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 15 (arr)


State 38

   22 ifstmt: IF . boolexpr THEN statements else ENDIF

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not              go to state 59
    boolexpr         go to state 60
    relationandexpr  go to state 61
    relationexpr     go to state 62


State 39

   25 while: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not              go to state 59
    boolexpr         go to state 63
    relationandexpr  go to state 61
    relationexpr     go to state 62


State 40

   26 do: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 64


State 41

   39 statement: CONTINUE .

    $default  reduce using rule 39 (statement)


State 42

   27 read: READ . vars

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident  go to state 46
    vars   go to state 65
    var    go to state 66


State 43

   28 write: WRITE . vars

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident  go to state 46
    vars   go to state 67
    var    go to state 66


State 44

   29 return: RETURN . expression

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 69
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 45

   17 comment: COMMENT .

    $default  reduce using rule 17 (comment)


State 46

   64 var: ident .
   65    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 64 (var)


State 47

   18 statements: comment . statements

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 74
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 48

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 75


State 49

   33 statement: assignment .

    $default  reduce using rule 33 (statement)


State 50

   34 statement: ifstmt .

    $default  reduce using rule 34 (statement)


State 51

   35 statement: while .

    $default  reduce using rule 35 (statement)


State 52

   36 statement: do .

    $default  reduce using rule 36 (statement)


State 53

   37 statement: read .

    $default  reduce using rule 37 (statement)


State 54

   38 statement: write .

    $default  reduce using rule 38 (statement)


State 55

   40 statement: return .

    $default  reduce using rule 40 (statement)


State 56

   19 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 76


State 57

   21 assignment: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


State 58

   66 not: NOT .

    $default  reduce using rule 66 (not)


State 59

   80 relationexpr: not . relationexproptions

    TRUE     shift, and go to state 78
    FALSE    shift, and go to state 79
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 80

    L_PAREN   [reduce using rule 51 (neg)]
    $default  reduce using rule 51 (neg)

    expression           go to state 81
    multexpression       go to state 70
    neg                  go to state 71
    term                 go to state 72
    relationexproptions  go to state 82


State 60

   22 ifstmt: IF boolexpr . THEN statements else ENDIF

    THEN  shift, and go to state 83


State 61

   74 boolexpr: relationandexpr . boolexprseq

    OR  shift, and go to state 84

    $default  reduce using rule 76 (boolexprseq)

    boolexprseq  go to state 85


State 62

   77 relationandexpr: relationexpr . relationandexprseq

    AND  shift, and go to state 86

    $default  reduce using rule 79 (relationandexprseq)

    relationandexprseq  go to state 87


State 63

   25 while: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 88


State 64

   26 do: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 89
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 65

   27 read: READ vars .

    $default  reduce using rule 27 (read)


State 66

   30 vars: var . varcomma

    COMMA  shift, and go to state 90

    $default  reduce using rule 32 (varcomma)

    varcomma  go to state 91


State 67

   28 write: WRITE vars .

    $default  reduce using rule 28 (write)


State 68

   50 neg: SUB .

    $default  reduce using rule 50 (neg)


State 69

   29 return: RETURN expression .

    $default  reduce using rule 29 (return)


State 70

   41 expression: multexpression . expressionseq

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 44 (expressionseq)

    expressionseq  go to state 94


State 71

   54 term: neg . ident termmatch
   55     | neg . termoption

    IDENT      shift, and go to state 6
    NUMBER     shift, and go to state 95
    L_PAREN    shift, and go to state 96
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident       go to state 97
    termoption  go to state 98


State 72

   45 multexpression: term . termseq

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (termseq)

    termseq  go to state 102


State 73

   65 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 103
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 74

   18 statements: comment statements .

    $default  reduce using rule 18 (statements)


State 75

    6 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 76

   19 statements: statement SEMICOLON . statements

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 104
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 77

   21 assignment: var ASSIGN . expression

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 105
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 78

   82 relationexproptions: TRUE .

    $default  reduce using rule 82 (relationexproptions)


State 79

   83 relationexproptions: FALSE .

    $default  reduce using rule 83 (relationexproptions)


State 80

   84 relationexproptions: L_PAREN . boolexpr R_PAREN

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not              go to state 59
    boolexpr         go to state 106
    relationandexpr  go to state 61
    relationexpr     go to state 62


State 81

   81 relationexproptions: expression . comp expression

    EQ   shift, and go to state 107
    NEQ  shift, and go to state 108
    LT   shift, and go to state 109
    GT   shift, and go to state 110
    LTE  shift, and go to state 111
    GTE  shift, and go to state 112

    comp  go to state 113


State 82

   80 relationexpr: not relationexproptions .

    $default  reduce using rule 80 (relationexpr)


State 83

   22 ifstmt: IF boolexpr THEN . statements else ENDIF

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 114
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 84

   75 boolexprseq: OR . relationandexpr boolexprseq

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not              go to state 59
    relationandexpr  go to state 115
    relationexpr     go to state 62


State 85

   74 boolexpr: relationandexpr boolexprseq .

    $default  reduce using rule 74 (boolexpr)


State 86

   78 relationandexprseq: AND . relationexpr relationandexprseq

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not           go to state 59
    relationexpr  go to state 116


State 87

   77 relationandexpr: relationexpr relationandexprseq .

    $default  reduce using rule 77 (relationandexpr)


State 88

   25 while: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 117
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 89

   26 do: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 118


State 90

   31 varcomma: COMMA . var varcomma

    IDENT      shift, and go to state 6
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8

    ident  go to state 46
    var    go to state 119


State 91

   30 vars: var varcomma .

    $default  reduce using rule 30 (vars)


State 92

   43 expressionseq: SUB . multexpression expressionseq

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    multexpression  go to state 120
    neg             go to state 71
    term            go to state 72


State 93

   42 expressionseq: ADD . multexpression expressionseq

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    multexpression  go to state 121
    neg             go to state 71
    term            go to state 72


State 94

   41 expression: multexpression expressionseq .

    $default  reduce using rule 41 (expression)


State 95

   52 termoption: NUMBER .

    $default  reduce using rule 52 (termoption)


State 96

   53 termoption: L_PAREN . expression R_PAREN

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 122
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 97

   54 term: neg ident . termmatch

    L_PAREN           shift, and go to state 123
    L_SQUARE_BRACKET  shift, and go to state 124

    $default  reduce using rule 58 (termmatch)

    termmatch     go to state 125
    matchterm     go to state 126
    notmatchterm  go to state 127


State 98

   55 term: neg termoption .

    $default  reduce using rule 55 (term)


State 99

   46 termseq: MULT . term termseq

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    neg   go to state 71
    term  go to state 128


State 100

   47 termseq: DIV . term termseq

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    neg   go to state 71
    term  go to state 129


State 101

   48 termseq: MOD . term termseq

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    neg   go to state 71
    term  go to state 130


State 102

   45 multexpression: term termseq .

    $default  reduce using rule 45 (multexpression)


State 103

   65 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 131


State 104

   19 statements: statement SEMICOLON statements .

    $default  reduce using rule 19 (statements)


State 105

   21 assignment: var ASSIGN expression .

    $default  reduce using rule 21 (assignment)


State 106

   84 relationexproptions: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 132


State 107

   68 comp: EQ .

    $default  reduce using rule 68 (comp)


State 108

   69 comp: NEQ .

    $default  reduce using rule 69 (comp)


State 109

   70 comp: LT .

    $default  reduce using rule 70 (comp)


State 110

   71 comp: GT .

    $default  reduce using rule 71 (comp)


State 111

   72 comp: LTE .

    $default  reduce using rule 72 (comp)


State 112

   73 comp: GTE .

    $default  reduce using rule 73 (comp)


State 113

   81 relationexproptions: expression comp . expression

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 133
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 114

   22 ifstmt: IF boolexpr THEN statements . else ENDIF

    ELSE  shift, and go to state 134

    $default  reduce using rule 24 (else)

    else  go to state 135


State 115

   75 boolexprseq: OR relationandexpr . boolexprseq

    OR  shift, and go to state 84

    $default  reduce using rule 76 (boolexprseq)

    boolexprseq  go to state 136


State 116

   78 relationandexprseq: AND relationexpr . relationandexprseq

    AND  shift, and go to state 86

    $default  reduce using rule 79 (relationandexprseq)

    relationandexprseq  go to state 137


State 117

   25 while: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 138


State 118

   26 do: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 139


State 119

   31 varcomma: COMMA var . varcomma

    COMMA  shift, and go to state 90

    $default  reduce using rule 32 (varcomma)

    varcomma  go to state 140


State 120

   43 expressionseq: SUB multexpression . expressionseq

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 44 (expressionseq)

    expressionseq  go to state 141


State 121

   42 expressionseq: ADD multexpression . expressionseq

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 44 (expressionseq)

    expressionseq  go to state 142


State 122

   53 termoption: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 143


State 123

   59 matchterm: L_PAREN . expressionlist R_PAREN

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 144
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72
    expressionlist  go to state 145


State 124

   60 notmatchterm: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 146
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 125

   54 term: neg ident termmatch .

    $default  reduce using rule 54 (term)


State 126

   56 termmatch: matchterm .

    $default  reduce using rule 56 (termmatch)


State 127

   57 termmatch: notmatchterm .

    $default  reduce using rule 57 (termmatch)


State 128

   46 termseq: MULT term . termseq

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (termseq)

    termseq  go to state 147


State 129

   47 termseq: DIV term . termseq

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (termseq)

    termseq  go to state 148


State 130

   48 termseq: MOD term . termseq

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (termseq)

    termseq  go to state 149


State 131

   65 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 65 (var)


State 132

   84 relationexproptions: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 84 (relationexproptions)


State 133

   81 relationexproptions: expression comp expression .

    $default  reduce using rule 81 (relationexproptions)


State 134

   23 else: ELSE . statements

    IDENT      shift, and go to state 6
    IF         shift, and go to state 38
    WHILE      shift, and go to state 39
    DO         shift, and go to state 40
    CONTINUE   shift, and go to state 41
    READ       shift, and go to state 42
    WRITE      shift, and go to state 43
    RETURN     shift, and go to state 44
    NO_IDENT1  shift, and go to state 7
    NO_IDENT2  shift, and go to state 8
    COMMENT    shift, and go to state 45

    $default  reduce using rule 20 (statements)

    ident       go to state 46
    comment     go to state 47
    statements  go to state 150
    assignment  go to state 49
    ifstmt      go to state 50
    while       go to state 51
    do          go to state 52
    read        go to state 53
    write       go to state 54
    return      go to state 55
    statement   go to state 56
    var         go to state 57


State 135

   22 ifstmt: IF boolexpr THEN statements else . ENDIF

    ENDIF  shift, and go to state 151


State 136

   75 boolexprseq: OR relationandexpr boolexprseq .

    $default  reduce using rule 75 (boolexprseq)


State 137

   78 relationandexprseq: AND relationexpr relationandexprseq .

    $default  reduce using rule 78 (relationandexprseq)


State 138

   25 while: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 25 (while)


State 139

   26 do: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT  shift, and go to state 58

    $default  reduce using rule 67 (not)

    not              go to state 59
    boolexpr         go to state 152
    relationandexpr  go to state 61
    relationexpr     go to state 62


State 140

   31 varcomma: COMMA var varcomma .

    $default  reduce using rule 31 (varcomma)


State 141

   43 expressionseq: SUB multexpression expressionseq .

    $default  reduce using rule 43 (expressionseq)


State 142

   42 expressionseq: ADD multexpression expressionseq .

    $default  reduce using rule 42 (expressionseq)


State 143

   53 termoption: L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (termoption)


State 144

   61 expressionlist: expression . expressioncomma

    COMMA  shift, and go to state 153

    $default  reduce using rule 63 (expressioncomma)

    expressioncomma  go to state 154


State 145

   59 matchterm: L_PAREN expressionlist . R_PAREN

    R_PAREN  shift, and go to state 155


State 146

   60 notmatchterm: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 156


State 147

   46 termseq: MULT term termseq .

    $default  reduce using rule 46 (termseq)


State 148

   47 termseq: DIV term termseq .

    $default  reduce using rule 47 (termseq)


State 149

   48 termseq: MOD term termseq .

    $default  reduce using rule 48 (termseq)


State 150

   23 else: ELSE statements .

    $default  reduce using rule 23 (else)


State 151

   22 ifstmt: IF boolexpr THEN statements else ENDIF .

    $default  reduce using rule 22 (ifstmt)


State 152

   26 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 26 (do)


State 153

   62 expressioncomma: COMMA . expression expressioncomma

    SUB  shift, and go to state 68

    $default  reduce using rule 51 (neg)

    expression      go to state 157
    multexpression  go to state 70
    neg             go to state 71
    term            go to state 72


State 154

   61 expressionlist: expression expressioncomma .

    $default  reduce using rule 61 (expressionlist)


State 155

   59 matchterm: L_PAREN expressionlist R_PAREN .

    $default  reduce using rule 59 (matchterm)


State 156

   60 notmatchterm: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (notmatchterm)


State 157

   62 expressioncomma: COMMA expression . expressioncomma

    COMMA  shift, and go to state 153

    $default  reduce using rule 63 (expressioncomma)

    expressioncomma  go to state 158


State 158

   62 expressioncomma: COMMA expression expressioncomma .

    $default  reduce using rule 62 (expressioncomma)
