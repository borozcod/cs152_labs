Nonterminals useless in grammar

   neg


Terminals unused in grammar

   WHILE
   DO
   BEGINLOOP
   ENDLOOP
   CONTINUE
   READ
   WRITE
   RETURN
   NO_IDENT1
   NO_IDENT2
   COMMENT


Rules useless in grammar

   56 neg: SUB
   57    | %empty


State 55 conflicts: 3 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function '\n'

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    6 ident: IDENT

    7 declarationseq: declaration declarationseq
    8               | %empty

    9 declaration: ident declarations

   10 declarations: COMMA ident declarations
   11             | COLON arr INTEGER SEMICOLON

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   13    | %empty

   14 statements: statement SEMICOLON statements
   15           | %empty

   16 assignment: var ASSIGN expression

   17 ifstmt: IF boolexpr THEN statements else ENDIF SEMICOLON

   18 else: ELSE statements
   19     | %empty

   20 statement: assignment
   21          | ifstmt

   22 expression: multexpression expressionseq

   23 expressionseq: ADD multexpression expressionseq
   24              | SUB multexpression expressionseq
   25              | %empty

   26 multexpression: term termseq

   27 termseq: MULT term termseq
   28        | DIV term termseq
   29        | MOD term termseq
   30        | %empty

   31 termoption: var
   32           | NUMBER
   33           | L_PAREN expression R_PAREN

   34 term: termoption

   35 var: ident
   36    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   37 not: NOT
   38    | %empty

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 boolexpr: relationandexpr boolexprseq

   46 boolexprseq: OR relationandexpr boolexprseq
   47            | %empty

   48 relationandexpr: relationexpr relationandexprseq

   49 relationandexprseq: AND relationexpr relationandexprseq
   50                   | %empty

   51 relationexpr: not relationexproptions

   52 relationexproptions: expression comp expression
   53                    | TRUE
   54                    | FALSE
   55                    | L_PAREN boolexpr R_PAREN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3 4
error (256)
IDENT (258) 6
FUNCTION (259) 5
BEGIN_PARAMS (260) 5
END_PARAMS (261) 5
BEGIN_LOCALS (262) 5
END_LOCALS (263) 5
BEGIN_BODY (264) 5
END_BODY (265) 5
INTEGER (266) 11
ARRAY (267) 12
OF (268) 12
IF (269) 17
THEN (270) 17
ENDIF (271) 17
ELSE (272) 18
WHILE (273)
DO (274)
BEGINLOOP (275)
ENDLOOP (276)
CONTINUE (277)
READ (278)
WRITE (279)
AND (280) 49
OR (281) 46
NOT (282) 37
TRUE (283) 53
FALSE (284) 54
RETURN (285)
SUB (286) 24
ADD (287) 23
MULT (288) 27
DIV (289) 28
MOD (290) 29
EQ (291) 39
NEQ (292) 40
LT (293) 41
GT (294) 42
LTE (295) 43
GTE (296) 44
NUMBER (297) 12 32
SEMICOLON (298) 5 11 14 17
COLON (299) 11
COMMA (300) 10
L_PAREN (301) 33 55
R_PAREN (302) 33 55
L_SQUARE_BRACKET (303) 12 36
R_SQUARE_BRACKET (304) 12 36
ASSIGN (305) 16
NO_IDENT1 (306)
NO_IDENT2 (307)
COMMENT (308)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1 2, on right: 0 2
line (57)
    on left: 3 4, on right: 1 2
function (58)
    on left: 5, on right: 4
ident (59)
    on left: 6, on right: 5 9 10 35 36
declarationseq (60)
    on left: 7 8, on right: 5 7
declaration (61)
    on left: 9, on right: 7
declarations (62)
    on left: 10 11, on right: 9 10
arr (63)
    on left: 12 13, on right: 11
statements (64)
    on left: 14 15, on right: 5 14 17 18
assignment (65)
    on left: 16, on right: 20
ifstmt (66)
    on left: 17, on right: 21
else (67)
    on left: 18 19, on right: 17
statement (68)
    on left: 20 21, on right: 14
expression (69)
    on left: 22, on right: 16 33 36 52
expressionseq (70)
    on left: 23 24 25, on right: 22 23 24
multexpression (71)
    on left: 26, on right: 22 23 24
termseq (72)
    on left: 27 28 29 30, on right: 26 27 28 29
termoption (73)
    on left: 31 32 33, on right: 34
term (74)
    on left: 34, on right: 26 27 28 29
var (75)
    on left: 35 36, on right: 16 31
not (76)
    on left: 37 38, on right: 51
comp (77)
    on left: 39 40 41 42 43 44, on right: 52
boolexpr (78)
    on left: 45, on right: 17 55
boolexprseq (79)
    on left: 46 47, on right: 45 46
relationandexpr (80)
    on left: 48, on right: 45 46
relationandexprseq (81)
    on left: 49 50, on right: 48 49
relationexpr (82)
    on left: 51, on right: 48 49
relationexproptions (83)
    on left: 52 53 54 55, on right: 51


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    input     go to state 3
    line      go to state 4
    function  go to state 5


State 1

    5 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 8
    '\n'  shift, and go to state 9


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . '\n'

    '\n'  shift, and go to state 10


State 6

    6 ident: IDENT .

    $default  reduce using rule 6 (ident)


State 7

    5 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 11


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 input: input '\n' . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    line      go to state 12
    function  go to state 5


State 10

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


State 11

    5 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 12

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 13

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 15
    declaration     go to state 16


State 14

    9 declaration: ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 19


State 15

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq . END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 20


State 16

    7 declarationseq: declaration . declarationseq

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 21
    declaration     go to state 16


State 17

   11 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 22

    $default  reduce using rule 13 (arr)

    arr  go to state 23


State 18

   10 declarations: COMMA . ident declarations

    IDENT  shift, and go to state 6

    ident  go to state 24


State 19

    9 declaration: ident declarations .

    $default  reduce using rule 9 (declaration)


State 20

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS . BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

    7 declarationseq: declaration declarationseq .

    $default  reduce using rule 7 (declarationseq)


State 22

   12 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   11 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 27


State 24

   10 declarations: COMMA ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 28


State 25

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS . declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 29
    declaration     go to state 16


State 26

   12 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 30


State 27

   11 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 28

   10 declarations: COMMA ident declarations .

    $default  reduce using rule 10 (declarations)


State 29

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

   11 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 11 (declarations)


State 32

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 33

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 35


State 34

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT  shift, and go to state 6
    IF     shift, and go to state 36

    $default  reduce using rule 15 (statements)

    ident       go to state 37
    statements  go to state 38
    assignment  go to state 39
    ifstmt      go to state 40
    statement   go to state 41
    var         go to state 42


State 35

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 12 (arr)


State 36

   17 ifstmt: IF . boolexpr THEN statements else ENDIF SEMICOLON

    NOT  shift, and go to state 43

    $default  reduce using rule 38 (not)

    not              go to state 44
    boolexpr         go to state 45
    relationandexpr  go to state 46
    relationexpr     go to state 47


State 37

   35 var: ident .
   36    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 48

    $default  reduce using rule 35 (var)


State 38

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 49


State 39

   20 statement: assignment .

    $default  reduce using rule 20 (statement)


State 40

   21 statement: ifstmt .

    $default  reduce using rule 21 (statement)


State 41

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 50


State 42

   16 assignment: var . ASSIGN expression

    ASSIGN  shift, and go to state 51


State 43

   37 not: NOT .

    $default  reduce using rule 37 (not)


State 44

   51 relationexpr: not . relationexproptions

    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 55

    ident                go to state 37
    expression           go to state 56
    multexpression       go to state 57
    termoption           go to state 58
    term                 go to state 59
    var                  go to state 60
    relationexproptions  go to state 61


State 45

   17 ifstmt: IF boolexpr . THEN statements else ENDIF SEMICOLON

    THEN  shift, and go to state 62


State 46

   45 boolexpr: relationandexpr . boolexprseq

    OR  shift, and go to state 63

    $default  reduce using rule 47 (boolexprseq)

    boolexprseq  go to state 64


State 47

   48 relationandexpr: relationexpr . relationandexprseq

    AND  shift, and go to state 65

    $default  reduce using rule 50 (relationandexprseq)

    relationandexprseq  go to state 66


State 48

   36 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    expression      go to state 68
    multexpression  go to state 57
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 49

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 50

   14 statements: statement SEMICOLON . statements

    IDENT  shift, and go to state 6
    IF     shift, and go to state 36

    $default  reduce using rule 15 (statements)

    ident       go to state 37
    statements  go to state 69
    assignment  go to state 39
    ifstmt      go to state 40
    statement   go to state 41
    var         go to state 42


State 51

   16 assignment: var ASSIGN . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    expression      go to state 70
    multexpression  go to state 57
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 52

   53 relationexproptions: TRUE .

    $default  reduce using rule 53 (relationexproptions)


State 53

   54 relationexproptions: FALSE .

    $default  reduce using rule 54 (relationexproptions)


State 54

   32 termoption: NUMBER .

    $default  reduce using rule 32 (termoption)


State 55

   33 termoption: L_PAREN . expression R_PAREN
   55 relationexproptions: L_PAREN . boolexpr R_PAREN

    IDENT    shift, and go to state 6
    NOT      shift, and go to state 43
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    IDENT     [reduce using rule 38 (not)]
    NUMBER    [reduce using rule 38 (not)]
    L_PAREN   [reduce using rule 38 (not)]
    $default  reduce using rule 38 (not)

    ident            go to state 37
    expression       go to state 71
    multexpression   go to state 57
    termoption       go to state 58
    term             go to state 59
    var              go to state 60
    not              go to state 44
    boolexpr         go to state 72
    relationandexpr  go to state 46
    relationexpr     go to state 47


State 56

   52 relationexproptions: expression . comp expression

    EQ   shift, and go to state 73
    NEQ  shift, and go to state 74
    LT   shift, and go to state 75
    GT   shift, and go to state 76
    LTE  shift, and go to state 77
    GTE  shift, and go to state 78

    comp  go to state 79


State 57

   22 expression: multexpression . expressionseq

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 25 (expressionseq)

    expressionseq  go to state 82


State 58

   34 term: termoption .

    $default  reduce using rule 34 (term)


State 59

   26 multexpression: term . termseq

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 30 (termseq)

    termseq  go to state 86


State 60

   31 termoption: var .

    $default  reduce using rule 31 (termoption)


State 61

   51 relationexpr: not relationexproptions .

    $default  reduce using rule 51 (relationexpr)


State 62

   17 ifstmt: IF boolexpr THEN . statements else ENDIF SEMICOLON

    IDENT  shift, and go to state 6
    IF     shift, and go to state 36

    $default  reduce using rule 15 (statements)

    ident       go to state 37
    statements  go to state 87
    assignment  go to state 39
    ifstmt      go to state 40
    statement   go to state 41
    var         go to state 42


State 63

   46 boolexprseq: OR . relationandexpr boolexprseq

    NOT  shift, and go to state 43

    $default  reduce using rule 38 (not)

    not              go to state 44
    relationandexpr  go to state 88
    relationexpr     go to state 47


State 64

   45 boolexpr: relationandexpr boolexprseq .

    $default  reduce using rule 45 (boolexpr)


State 65

   49 relationandexprseq: AND . relationexpr relationandexprseq

    NOT  shift, and go to state 43

    $default  reduce using rule 38 (not)

    not           go to state 44
    relationexpr  go to state 89


State 66

   48 relationandexpr: relationexpr relationandexprseq .

    $default  reduce using rule 48 (relationandexpr)


State 67

   33 termoption: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    expression      go to state 71
    multexpression  go to state 57
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 68

   36 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 90


State 69

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 70

   16 assignment: var ASSIGN expression .

    $default  reduce using rule 16 (assignment)


State 71

   33 termoption: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 91


State 72

   55 relationexproptions: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 92


State 73

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 74

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 75

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 76

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 77

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 78

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 79

   52 relationexproptions: expression comp . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    expression      go to state 93
    multexpression  go to state 57
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 80

   24 expressionseq: SUB . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    multexpression  go to state 94
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 81

   23 expressionseq: ADD . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident           go to state 37
    multexpression  go to state 95
    termoption      go to state 58
    term            go to state 59
    var             go to state 60


State 82

   22 expression: multexpression expressionseq .

    $default  reduce using rule 22 (expression)


State 83

   27 termseq: MULT . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident       go to state 37
    termoption  go to state 58
    term        go to state 96
    var         go to state 60


State 84

   28 termseq: DIV . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident       go to state 37
    termoption  go to state 58
    term        go to state 97
    var         go to state 60


State 85

   29 termseq: MOD . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 54
    L_PAREN  shift, and go to state 67

    ident       go to state 37
    termoption  go to state 58
    term        go to state 98
    var         go to state 60


State 86

   26 multexpression: term termseq .

    $default  reduce using rule 26 (multexpression)


State 87

   17 ifstmt: IF boolexpr THEN statements . else ENDIF SEMICOLON

    ELSE  shift, and go to state 99

    $default  reduce using rule 19 (else)

    else  go to state 100


State 88

   46 boolexprseq: OR relationandexpr . boolexprseq

    OR  shift, and go to state 63

    $default  reduce using rule 47 (boolexprseq)

    boolexprseq  go to state 101


State 89

   49 relationandexprseq: AND relationexpr . relationandexprseq

    AND  shift, and go to state 65

    $default  reduce using rule 50 (relationandexprseq)

    relationandexprseq  go to state 102


State 90

   36 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 36 (var)


State 91

   33 termoption: L_PAREN expression R_PAREN .

    $default  reduce using rule 33 (termoption)


State 92

   55 relationexproptions: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 55 (relationexproptions)


State 93

   52 relationexproptions: expression comp expression .

    $default  reduce using rule 52 (relationexproptions)


State 94

   24 expressionseq: SUB multexpression . expressionseq

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 25 (expressionseq)

    expressionseq  go to state 103


State 95

   23 expressionseq: ADD multexpression . expressionseq

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 25 (expressionseq)

    expressionseq  go to state 104


State 96

   27 termseq: MULT term . termseq

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 30 (termseq)

    termseq  go to state 105


State 97

   28 termseq: DIV term . termseq

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 30 (termseq)

    termseq  go to state 106


State 98

   29 termseq: MOD term . termseq

    MULT  shift, and go to state 83
    DIV   shift, and go to state 84
    MOD   shift, and go to state 85

    $default  reduce using rule 30 (termseq)

    termseq  go to state 107


State 99

   18 else: ELSE . statements

    IDENT  shift, and go to state 6
    IF     shift, and go to state 36

    $default  reduce using rule 15 (statements)

    ident       go to state 37
    statements  go to state 108
    assignment  go to state 39
    ifstmt      go to state 40
    statement   go to state 41
    var         go to state 42


State 100

   17 ifstmt: IF boolexpr THEN statements else . ENDIF SEMICOLON

    ENDIF  shift, and go to state 109


State 101

   46 boolexprseq: OR relationandexpr boolexprseq .

    $default  reduce using rule 46 (boolexprseq)


State 102

   49 relationandexprseq: AND relationexpr relationandexprseq .

    $default  reduce using rule 49 (relationandexprseq)


State 103

   24 expressionseq: SUB multexpression expressionseq .

    $default  reduce using rule 24 (expressionseq)


State 104

   23 expressionseq: ADD multexpression expressionseq .

    $default  reduce using rule 23 (expressionseq)


State 105

   27 termseq: MULT term termseq .

    $default  reduce using rule 27 (termseq)


State 106

   28 termseq: DIV term termseq .

    $default  reduce using rule 28 (termseq)


State 107

   29 termseq: MOD term termseq .

    $default  reduce using rule 29 (termseq)


State 108

   18 else: ELSE statements .

    $default  reduce using rule 18 (else)


State 109

   17 ifstmt: IF boolexpr THEN statements else ENDIF . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 110

   17 ifstmt: IF boolexpr THEN statements else ENDIF SEMICOLON .

    $default  reduce using rule 17 (ifstmt)
