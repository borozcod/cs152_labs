Nonterminals useless in grammar

   neg


Terminals unused in grammar

   RETURN
   NO_IDENT1
   NO_IDENT2
   COMMENT


Rules useless in grammar

   70 neg: SUB
   71    | %empty


State 84 conflicts: 3 shift/reduce


Grammar

    0 $accept: input $end

    1 input: line
    2      | input '\n' line

    3 line: '\n'
    4     | function '\n'

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    6 ident: IDENT

    7 declarationseq: declaration declarationseq
    8               | %empty

    9 declaration: ident declarations

   10 declarations: COMMA ident declarations
   11             | COLON arr INTEGER SEMICOLON

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   13    | %empty

   14 statements: statement SEMICOLON statements
   15           | %empty

   16 assignment: var ASSIGN expression

   17 ifstmt: IF boolexpr THEN statements else ENDIF

   18 else: ELSE statements
   19     | %empty

   20 while: WHILE boolexpr BEGINLOOP statements ENDLOOP

   21 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr

   22 read: READ vars

   23 write: WRITE vars

   24 return: expression

   25 vars: var varcomma

   26 varcomma: COMMA var varcomma
   27         | %empty

   28 statement: assignment
   29          | ifstmt
   30          | while
   31          | do
   32          | read
   33          | write
   34          | CONTINUE
   35          | return

   36 expression: multexpression expressionseq

   37 expressionseq: ADD multexpression expressionseq
   38              | SUB multexpression expressionseq
   39              | %empty

   40 multexpression: term termseq

   41 termseq: MULT term termseq
   42        | DIV term termseq
   43        | MOD term termseq
   44        | %empty

   45 termoption: var
   46           | NUMBER
   47           | L_PAREN expression R_PAREN

   48 term: termoption

   49 var: ident
   50    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   51 not: NOT
   52    | %empty

   53 comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 boolexpr: relationandexpr boolexprseq

   60 boolexprseq: OR relationandexpr boolexprseq
   61            | %empty

   62 relationandexpr: relationexpr relationandexprseq

   63 relationandexprseq: AND relationexpr relationandexprseq
   64                   | %empty

   65 relationexpr: not relationexproptions

   66 relationexproptions: expression comp expression
   67                    | TRUE
   68                    | FALSE
   69                    | L_PAREN boolexpr R_PAREN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2 3 4
error (256)
IDENT (258) 6
FUNCTION (259) 5
BEGIN_PARAMS (260) 5
END_PARAMS (261) 5
BEGIN_LOCALS (262) 5
END_LOCALS (263) 5
BEGIN_BODY (264) 5
END_BODY (265) 5
INTEGER (266) 11
ARRAY (267) 12
OF (268) 12
IF (269) 17
THEN (270) 17
ENDIF (271) 17
ELSE (272) 18
WHILE (273) 20 21
DO (274) 21
BEGINLOOP (275) 20 21
ENDLOOP (276) 20 21
CONTINUE (277) 34
READ (278) 22
WRITE (279) 23
AND (280) 63
OR (281) 60
NOT (282) 51
TRUE (283) 67
FALSE (284) 68
RETURN (285)
SUB (286) 38
ADD (287) 37
MULT (288) 41
DIV (289) 42
MOD (290) 43
EQ (291) 53
NEQ (292) 54
LT (293) 55
GT (294) 56
LTE (295) 57
GTE (296) 58
NUMBER (297) 12 46
SEMICOLON (298) 5 11 14
COLON (299) 11
COMMA (300) 10 26
L_PAREN (301) 47 69
R_PAREN (302) 47 69
L_SQUARE_BRACKET (303) 12 50
R_SQUARE_BRACKET (304) 12 50
ASSIGN (305) 16
NO_IDENT1 (306)
NO_IDENT2 (307)
COMMENT (308)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
input (56)
    on left: 1 2, on right: 0 2
line (57)
    on left: 3 4, on right: 1 2
function (58)
    on left: 5, on right: 4
ident (59)
    on left: 6, on right: 5 9 10 49 50
declarationseq (60)
    on left: 7 8, on right: 5 7
declaration (61)
    on left: 9, on right: 7
declarations (62)
    on left: 10 11, on right: 9 10
arr (63)
    on left: 12 13, on right: 11
statements (64)
    on left: 14 15, on right: 5 14 17 18 20 21
assignment (65)
    on left: 16, on right: 28
ifstmt (66)
    on left: 17, on right: 29
else (67)
    on left: 18 19, on right: 17
while (68)
    on left: 20, on right: 30
do (69)
    on left: 21, on right: 31
read (70)
    on left: 22, on right: 32
write (71)
    on left: 23, on right: 33
return (72)
    on left: 24, on right: 35
vars (73)
    on left: 25, on right: 22 23
varcomma (74)
    on left: 26 27, on right: 25 26
statement (75)
    on left: 28 29 30 31 32 33 34 35, on right: 14
expression (76)
    on left: 36, on right: 16 24 47 50 66
expressionseq (77)
    on left: 37 38 39, on right: 36 37 38
multexpression (78)
    on left: 40, on right: 36 37 38
termseq (79)
    on left: 41 42 43 44, on right: 40 41 42 43
termoption (80)
    on left: 45 46 47, on right: 48
term (81)
    on left: 48, on right: 40 41 42 43
var (82)
    on left: 49 50, on right: 16 25 26 45
not (83)
    on left: 51 52, on right: 65
comp (84)
    on left: 53 54 55 56 57 58, on right: 66
boolexpr (85)
    on left: 59, on right: 17 20 21 69
boolexprseq (86)
    on left: 60 61, on right: 59 60
relationandexpr (87)
    on left: 62, on right: 59 60
relationandexprseq (88)
    on left: 63 64, on right: 62 63
relationexpr (89)
    on left: 65, on right: 62 63
relationexproptions (90)
    on left: 66 67 68 69, on right: 65


State 0

    0 $accept: . input $end

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    input     go to state 3
    line      go to state 4
    function  go to state 5


State 1

    5 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 3

    0 $accept: input . $end
    2 input: input . '\n' line

    $end  shift, and go to state 8
    '\n'  shift, and go to state 9


State 4

    1 input: line .

    $default  reduce using rule 1 (input)


State 5

    4 line: function . '\n'

    '\n'  shift, and go to state 10


State 6

    6 ident: IDENT .

    $default  reduce using rule 6 (ident)


State 7

    5 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 11


State 8

    0 $accept: input $end .

    $default  accept


State 9

    2 input: input '\n' . line

    FUNCTION  shift, and go to state 1
    '\n'      shift, and go to state 2

    line      go to state 12
    function  go to state 5


State 10

    4 line: function '\n' .

    $default  reduce using rule 4 (line)


State 11

    5 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 13


State 12

    2 input: input '\n' line .

    $default  reduce using rule 2 (input)


State 13

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 15
    declaration     go to state 16


State 14

    9 declaration: ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 19


State 15

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq . END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 20


State 16

    7 declarationseq: declaration . declarationseq

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 21
    declaration     go to state 16


State 17

   11 declarations: COLON . arr INTEGER SEMICOLON

    ARRAY  shift, and go to state 22

    $default  reduce using rule 13 (arr)

    arr  go to state 23


State 18

   10 declarations: COMMA . ident declarations

    IDENT  shift, and go to state 6

    ident  go to state 24


State 19

    9 declaration: ident declarations .

    $default  reduce using rule 9 (declaration)


State 20

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS . BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

    7 declarationseq: declaration declarationseq .

    $default  reduce using rule 7 (declarationseq)


State 22

   12 arr: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

   11 declarations: COLON arr . INTEGER SEMICOLON

    INTEGER  shift, and go to state 27


State 24

   10 declarations: COMMA ident . declarations

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    declarations  go to state 28


State 25

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS . declarationseq END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarationseq)

    ident           go to state 14
    declarationseq  go to state 29
    declaration     go to state 16


State 26

   12 arr: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 30


State 27

   11 declarations: COLON arr INTEGER . SEMICOLON

    SEMICOLON  shift, and go to state 31


State 28

   10 declarations: COMMA ident declarations .

    $default  reduce using rule 10 (declarations)


State 29

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

   11 declarations: COLON arr INTEGER SEMICOLON .

    $default  reduce using rule 11 (declarations)


State 32

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 33

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 35


State 34

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 45
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 35

   12 arr: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 12 (arr)


State 36

   17 ifstmt: IF . boolexpr THEN statements else ENDIF

    NOT  shift, and go to state 59

    $default  reduce using rule 52 (not)

    not              go to state 60
    boolexpr         go to state 61
    relationandexpr  go to state 62
    relationexpr     go to state 63


State 37

   20 while: WHILE . boolexpr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 59

    $default  reduce using rule 52 (not)

    not              go to state 60
    boolexpr         go to state 64
    relationandexpr  go to state 62
    relationexpr     go to state 63


State 38

   21 do: DO . BEGINLOOP statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 65


State 39

   34 statement: CONTINUE .

    $default  reduce using rule 34 (statement)


State 40

   22 read: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    vars   go to state 66
    var    go to state 67


State 41

   23 write: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    vars   go to state 68
    var    go to state 67


State 42

   46 termoption: NUMBER .

    $default  reduce using rule 46 (termoption)


State 43

   47 termoption: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    expression      go to state 69
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 44

   49 var: ident .
   50    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 49 (var)


State 45

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 46

   28 statement: assignment .

    $default  reduce using rule 28 (statement)


State 47

   29 statement: ifstmt .

    $default  reduce using rule 29 (statement)


State 48

   30 statement: while .

    $default  reduce using rule 30 (statement)


State 49

   31 statement: do .

    $default  reduce using rule 31 (statement)


State 50

   32 statement: read .

    $default  reduce using rule 32 (statement)


State 51

   33 statement: write .

    $default  reduce using rule 33 (statement)


State 52

   35 statement: return .

    $default  reduce using rule 35 (statement)


State 53

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 54

   24 return: expression .

    $default  reduce using rule 24 (return)


State 55

   36 expression: multexpression . expressionseq

    SUB  shift, and go to state 74
    ADD  shift, and go to state 75

    $default  reduce using rule 39 (expressionseq)

    expressionseq  go to state 76


State 56

   48 term: termoption .

    $default  reduce using rule 48 (term)


State 57

   40 multexpression: term . termseq

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 44 (termseq)

    termseq  go to state 80


State 58

   16 assignment: var . ASSIGN expression
   45 termoption: var .

    ASSIGN  shift, and go to state 81

    $default  reduce using rule 45 (termoption)


State 59

   51 not: NOT .

    $default  reduce using rule 51 (not)


State 60

   65 relationexpr: not . relationexproptions

    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 84

    ident                go to state 44
    expression           go to state 85
    multexpression       go to state 55
    termoption           go to state 56
    term                 go to state 57
    var                  go to state 70
    relationexproptions  go to state 86


State 61

   17 ifstmt: IF boolexpr . THEN statements else ENDIF

    THEN  shift, and go to state 87


State 62

   59 boolexpr: relationandexpr . boolexprseq

    OR  shift, and go to state 88

    $default  reduce using rule 61 (boolexprseq)

    boolexprseq  go to state 89


State 63

   62 relationandexpr: relationexpr . relationandexprseq

    AND  shift, and go to state 90

    $default  reduce using rule 64 (relationandexprseq)

    relationandexprseq  go to state 91


State 64

   20 while: WHILE boolexpr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 65

   21 do: DO BEGINLOOP . statements ENDLOOP WHILE boolexpr

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 93
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 66

   22 read: READ vars .

    $default  reduce using rule 22 (read)


State 67

   25 vars: var . varcomma

    COMMA  shift, and go to state 94

    $default  reduce using rule 27 (varcomma)

    varcomma  go to state 95


State 68

   23 write: WRITE vars .

    $default  reduce using rule 23 (write)


State 69

   47 termoption: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 96


State 70

   45 termoption: var .

    $default  reduce using rule 45 (termoption)


State 71

   50 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    expression      go to state 97
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 72

    5 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarationseq END_PARAMS BEGIN_LOCALS declarationseq END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 73

   14 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 98
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 74

   38 expressionseq: SUB . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    multexpression  go to state 99
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 75

   37 expressionseq: ADD . multexpression expressionseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    multexpression  go to state 100
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 76

   36 expression: multexpression expressionseq .

    $default  reduce using rule 36 (expression)


State 77

   41 termseq: MULT . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 44
    termoption  go to state 56
    term        go to state 101
    var         go to state 70


State 78

   42 termseq: DIV . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 44
    termoption  go to state 56
    term        go to state 102
    var         go to state 70


State 79

   43 termseq: MOD . term termseq

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident       go to state 44
    termoption  go to state 56
    term        go to state 103
    var         go to state 70


State 80

   40 multexpression: term termseq .

    $default  reduce using rule 40 (multexpression)


State 81

   16 assignment: var ASSIGN . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    expression      go to state 104
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 82

   67 relationexproptions: TRUE .

    $default  reduce using rule 67 (relationexproptions)


State 83

   68 relationexproptions: FALSE .

    $default  reduce using rule 68 (relationexproptions)


State 84

   47 termoption: L_PAREN . expression R_PAREN
   69 relationexproptions: L_PAREN . boolexpr R_PAREN

    IDENT    shift, and go to state 6
    NOT      shift, and go to state 59
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    IDENT     [reduce using rule 52 (not)]
    NUMBER    [reduce using rule 52 (not)]
    L_PAREN   [reduce using rule 52 (not)]
    $default  reduce using rule 52 (not)

    ident            go to state 44
    expression       go to state 69
    multexpression   go to state 55
    termoption       go to state 56
    term             go to state 57
    var              go to state 70
    not              go to state 60
    boolexpr         go to state 105
    relationandexpr  go to state 62
    relationexpr     go to state 63


State 85

   66 relationexproptions: expression . comp expression

    EQ   shift, and go to state 106
    NEQ  shift, and go to state 107
    LT   shift, and go to state 108
    GT   shift, and go to state 109
    LTE  shift, and go to state 110
    GTE  shift, and go to state 111

    comp  go to state 112


State 86

   65 relationexpr: not relationexproptions .

    $default  reduce using rule 65 (relationexpr)


State 87

   17 ifstmt: IF boolexpr THEN . statements else ENDIF

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 113
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 88

   60 boolexprseq: OR . relationandexpr boolexprseq

    NOT  shift, and go to state 59

    $default  reduce using rule 52 (not)

    not              go to state 60
    relationandexpr  go to state 114
    relationexpr     go to state 63


State 89

   59 boolexpr: relationandexpr boolexprseq .

    $default  reduce using rule 59 (boolexpr)


State 90

   63 relationandexprseq: AND . relationexpr relationandexprseq

    NOT  shift, and go to state 59

    $default  reduce using rule 52 (not)

    not           go to state 60
    relationexpr  go to state 115


State 91

   62 relationandexpr: relationexpr relationandexprseq .

    $default  reduce using rule 62 (relationandexpr)


State 92

   20 while: WHILE boolexpr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 116
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 93

   21 do: DO BEGINLOOP statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 117


State 94

   26 varcomma: COMMA . var varcomma

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 118


State 95

   25 vars: var varcomma .

    $default  reduce using rule 25 (vars)


State 96

   47 termoption: L_PAREN expression R_PAREN .

    $default  reduce using rule 47 (termoption)


State 97

   50 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 98

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 99

   38 expressionseq: SUB multexpression . expressionseq

    SUB  shift, and go to state 74
    ADD  shift, and go to state 75

    $default  reduce using rule 39 (expressionseq)

    expressionseq  go to state 120


State 100

   37 expressionseq: ADD multexpression . expressionseq

    SUB  shift, and go to state 74
    ADD  shift, and go to state 75

    $default  reduce using rule 39 (expressionseq)

    expressionseq  go to state 121


State 101

   41 termseq: MULT term . termseq

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 44 (termseq)

    termseq  go to state 122


State 102

   42 termseq: DIV term . termseq

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 44 (termseq)

    termseq  go to state 123


State 103

   43 termseq: MOD term . termseq

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 44 (termseq)

    termseq  go to state 124


State 104

   16 assignment: var ASSIGN expression .

    $default  reduce using rule 16 (assignment)


State 105

   69 relationexproptions: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 125


State 106

   53 comp: EQ .

    $default  reduce using rule 53 (comp)


State 107

   54 comp: NEQ .

    $default  reduce using rule 54 (comp)


State 108

   55 comp: LT .

    $default  reduce using rule 55 (comp)


State 109

   56 comp: GT .

    $default  reduce using rule 56 (comp)


State 110

   57 comp: LTE .

    $default  reduce using rule 57 (comp)


State 111

   58 comp: GTE .

    $default  reduce using rule 58 (comp)


State 112

   66 relationexproptions: expression comp . expression

    IDENT    shift, and go to state 6
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43

    ident           go to state 44
    expression      go to state 126
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 70


State 113

   17 ifstmt: IF boolexpr THEN statements . else ENDIF

    ELSE  shift, and go to state 127

    $default  reduce using rule 19 (else)

    else  go to state 128


State 114

   60 boolexprseq: OR relationandexpr . boolexprseq

    OR  shift, and go to state 88

    $default  reduce using rule 61 (boolexprseq)

    boolexprseq  go to state 129


State 115

   63 relationandexprseq: AND relationexpr . relationandexprseq

    AND  shift, and go to state 90

    $default  reduce using rule 64 (relationandexprseq)

    relationandexprseq  go to state 130


State 116

   20 while: WHILE boolexpr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 117

   21 do: DO BEGINLOOP statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 132


State 118

   26 varcomma: COMMA var . varcomma

    COMMA  shift, and go to state 94

    $default  reduce using rule 27 (varcomma)

    varcomma  go to state 133


State 119

   50 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 50 (var)


State 120

   38 expressionseq: SUB multexpression expressionseq .

    $default  reduce using rule 38 (expressionseq)


State 121

   37 expressionseq: ADD multexpression expressionseq .

    $default  reduce using rule 37 (expressionseq)


State 122

   41 termseq: MULT term termseq .

    $default  reduce using rule 41 (termseq)


State 123

   42 termseq: DIV term termseq .

    $default  reduce using rule 42 (termseq)


State 124

   43 termseq: MOD term termseq .

    $default  reduce using rule 43 (termseq)


State 125

   69 relationexproptions: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 69 (relationexproptions)


State 126

   66 relationexproptions: expression comp expression .

    $default  reduce using rule 66 (relationexproptions)


State 127

   18 else: ELSE . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    NUMBER    shift, and go to state 42
    L_PAREN   shift, and go to state 43

    $default  reduce using rule 15 (statements)

    ident           go to state 44
    statements      go to state 134
    assignment      go to state 46
    ifstmt          go to state 47
    while           go to state 48
    do              go to state 49
    read            go to state 50
    write           go to state 51
    return          go to state 52
    statement       go to state 53
    expression      go to state 54
    multexpression  go to state 55
    termoption      go to state 56
    term            go to state 57
    var             go to state 58


State 128

   17 ifstmt: IF boolexpr THEN statements else . ENDIF

    ENDIF  shift, and go to state 135


State 129

   60 boolexprseq: OR relationandexpr boolexprseq .

    $default  reduce using rule 60 (boolexprseq)


State 130

   63 relationandexprseq: AND relationexpr relationandexprseq .

    $default  reduce using rule 63 (relationandexprseq)


State 131

   20 while: WHILE boolexpr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (while)


State 132

   21 do: DO BEGINLOOP statements ENDLOOP WHILE . boolexpr

    NOT  shift, and go to state 59

    $default  reduce using rule 52 (not)

    not              go to state 60
    boolexpr         go to state 136
    relationandexpr  go to state 62
    relationexpr     go to state 63


State 133

   26 varcomma: COMMA var varcomma .

    $default  reduce using rule 26 (varcomma)


State 134

   18 else: ELSE statements .

    $default  reduce using rule 18 (else)


State 135

   17 ifstmt: IF boolexpr THEN statements else ENDIF .

    $default  reduce using rule 17 (ifstmt)


State 136

   21 do: DO BEGINLOOP statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 21 (do)
