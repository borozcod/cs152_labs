Terminals unused in grammar

   MAIN


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 $@1: %empty

    5 $@2: %empty

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    7 end_body: END_BODY

    8 function_ident: FUNCTION ident

    9 ident: IDENT

   10 declarations: %empty
   11             | declaration SEMICOLON declarations

   12 declaration: identifiers COLON INTEGER
   13            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 identifiers: ident
   15            | ident COMMA identifiers

   16 statement: var ASSIGN expression
   17          | IF bool_exp THEN statements ENDIF
   18          | IF bool_exp THEN statements ELSE statements ENDIF
   19          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   20          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression

   25 statements: statement SEMICOLON
   26           | statement SEMICOLON statements

   27 expression: multiplicative_expression
   28           | multiplicative_expression ADD expression
   29           | multiplicative_expression SUB expression

   30 multiplicative_expression: term
   31                          | term MULT multiplicative_expression
   32                          | term DIV multiplicative_expression
   33                          | term MOD multiplicative_expression

   34 term: var
   35     | SUB var
   36     | NUMBER
   37     | SUB NUMBER
   38     | L_PAREN expression R_PAREN
   39     | SUB L_PAREN expression R_PAREN
   40     | ident L_PAREN expressions R_PAREN

   41 expressions: %empty
   42            | comma_sep_expressions

   43 comma_sep_expressions: expression
   44                      | expression COMMA comma_sep_expressions

   45 bool_exp: relation_and_exp
   46         | relation_and_exp OR bool_exp

   47 relation_and_exp: relation_exp
   48                 | relation_exp AND relation_and_exp

   49 relation_exp: expression comp expression
   50             | NOT expression comp expression
   51             | TRUE
   52             | NOT TRUE
   53             | FALSE
   54             | NOT FALSE
   55             | L_PAREN bool_exp R_PAREN
   56             | NOT L_PAREN bool_exp R_PAREN

   57 comp: EQ
   58     | NEQ
   59     | LT
   60     | GT
   61     | LTE
   62     | GTE

   63 var: ident
   64    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   65 vars: var
   66     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_PARAMS (258) 6
END_PARAMS (259) 6
BEGIN_LOCALS (260) 6
END_LOCALS (261) 6
BEGIN_BODY (262) 6
END_BODY (263) 7
FUNCTION (264) 8
RETURN (265) 24
MAIN (266)
L_SQUARE_BRACKET (267) 13 64
R_SQUARE_BRACKET (268) 13 64
INTEGER (269) 12 13
ARRAY (270) 13
OF (271) 13
IF (272) 17 18
THEN (273) 17 18
ENDIF (274) 17 18
ELSE (275) 18
WHILE (276) 19 20
DO (277) 20
BEGINLOOP (278) 19 20
ENDLOOP (279) 19 20
CONTINUE (280) 23
READ (281) 21
WRITE (282) 22
AND (283) 48
OR (284) 46
NOT (285) 50 52 54 56
TRUE (286) 51 52
FALSE (287) 53 54
SUB (288) 29 35 37 39
ADD (289) 28
MULT (290) 31
DIV (291) 32
MOD (292) 33
EQ (293) 57
NEQ (294) 58
LT (295) 59
GT (296) 60
LTE (297) 61
GTE (298) 62
SEMICOLON (299) 6 11 25 26
COLON (300) 12 13
COMMA (301) 15 44 66
L_PAREN (302) 38 39 40 55 56
R_PAREN (303) 38 39 40 55 56
ASSIGN (304) 16
NUMBER (305) 13 36 37
IDENT (306) 9


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 6, on right: 3
$@1 (56)
    on left: 4, on right: 6
$@2 (57)
    on left: 5, on right: 6
end_body (58)
    on left: 7, on right: 6
function_ident (59)
    on left: 8, on right: 6
ident (60)
    on left: 9, on right: 8 14 15 40 63 64
declarations (61)
    on left: 10 11, on right: 6 11
declaration (62)
    on left: 12 13, on right: 11
identifiers (63)
    on left: 14 15, on right: 12 13 15
statement (64)
    on left: 16 17 18 19 20 21 22 23 24, on right: 25 26
statements (65)
    on left: 25 26, on right: 6 17 18 19 20 26
expression (66)
    on left: 27 28 29, on right: 16 24 28 29 38 39 43 44 49 50 64
multiplicative_expression (67)
    on left: 30 31 32 33, on right: 27 28 29 31 32 33
term (68)
    on left: 34 35 36 37 38 39 40, on right: 30 31 32 33
expressions (69)
    on left: 41 42, on right: 40
comma_sep_expressions (70)
    on left: 43 44, on right: 42 44
bool_exp (71)
    on left: 45 46, on right: 17 18 19 20 46 55 56
relation_and_exp (72)
    on left: 47 48, on right: 45 46 48
relation_exp (73)
    on left: 49 50 51 52 53 54 55 56, on right: 47 48
comp (74)
    on left: 57 58 59 60 61 62, on right: 49 50
var (75)
    on left: 63 64, on right: 16 34 35 65 66
vars (76)
    on left: 65 66, on right: 21 22 66


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

    8 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    6 function: function_ident . SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    SEMICOLON  shift, and go to state 10


State 6

    9 ident: IDENT .

    $default  reduce using rule 9 (ident)


State 7

    8 function_ident: FUNCTION ident .

    $default  reduce using rule 8 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 10

    6 function: function_ident SEMICOLON . BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_PARAMS  shift, and go to state 11


State 11

    6 function: function_ident SEMICOLON BEGIN_PARAMS . $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 12


State 12

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 . declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 14
    declaration   go to state 15
    identifiers   go to state 16


State 13

   14 identifiers: ident .
   15            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 14 (identifiers)


State 14

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations . END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    END_PARAMS  shift, and go to state 18


State 15

   11 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 16

   12 declaration: identifiers . COLON INTEGER
   13            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

   15 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    ident        go to state 13
    identifiers  go to state 21


State 18

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS . BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_LOCALS  shift, and go to state 22


State 19

   11 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 23
    declaration   go to state 15
    identifiers   go to state 16


State 20

   12 declaration: identifiers COLON . INTEGER
   13            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   15 identifiers: ident COMMA identifiers .

    $default  reduce using rule 15 (identifiers)


State 22

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS . $@2 declarations END_LOCALS BEGIN_BODY statements end_body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 26


State 23

   11 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 11 (declarations)


State 24

   12 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 12 (declaration)


State 25

   13 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 26

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 . declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 28
    declaration   go to state 15
    identifiers   go to state 16


State 27

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations . END_LOCALS BEGIN_BODY statements end_body

    END_LOCALS  shift, and go to state 30


State 29

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS . BEGIN_BODY statements end_body

    BEGIN_BODY  shift, and go to state 32


State 31

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 33


State 32

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY . statements end_body

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    ident       go to state 41
    statement   go to state 42
    statements  go to state 43
    var         go to state 44


State 33

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 45


State 34

   24 statement: RETURN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 50
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 35

   17 statement: IF . bool_exp THEN statements ENDIF
   18          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 59
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 36

   19 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 62
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 37

   20 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 63


State 38

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 39

   21 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 41
    var    go to state 64
    vars   go to state 65


State 40

   22 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 41
    var    go to state 64
    vars   go to state 66


State 41

   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 63 (var)


State 42

   25 statements: statement . SEMICOLON
   26           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 68


State 43

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements . end_body

    END_BODY  shift, and go to state 69

    end_body  go to state 70


State 44

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 46

   35 term: SUB . var
   37     | SUB . NUMBER
   39     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 72
    NUMBER   shift, and go to state 73
    IDENT    shift, and go to state 6

    ident  go to state 41
    var    go to state 74


State 47

   38 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 75
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 48

   36 term: NUMBER .

    $default  reduce using rule 36 (term)


State 49

   40 term: ident . L_PAREN expressions R_PAREN
   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67
    L_PAREN           shift, and go to state 76

    $default  reduce using rule 63 (var)


State 50

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 51

   27 expression: multiplicative_expression .
   28           | multiplicative_expression . ADD expression
   29           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 77
    ADD  shift, and go to state 78

    $default  reduce using rule 27 (expression)


State 52

   30 multiplicative_expression: term .
   31                          | term . MULT multiplicative_expression
   32                          | term . DIV multiplicative_expression
   33                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 30 (multiplicative_expression)


State 53

   34 term: var .

    $default  reduce using rule 34 (term)


State 54

   50 relation_exp: NOT . expression comp expression
   52             | NOT . TRUE
   54             | NOT . FALSE
   56             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 82
    FALSE    shift, and go to state 83
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 84
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 85
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 55

   51 relation_exp: TRUE .

    $default  reduce using rule 51 (relation_exp)


State 56

   53 relation_exp: FALSE .

    $default  reduce using rule 53 (relation_exp)


State 57

   38 term: L_PAREN . expression R_PAREN
   55 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 86
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 87
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 58

   49 relation_exp: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 94


State 59

   17 statement: IF bool_exp . THEN statements ENDIF
   18          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 95


State 60

   45 bool_exp: relation_and_exp .
   46         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 96

    $default  reduce using rule 45 (bool_exp)


State 61

   47 relation_and_exp: relation_exp .
   48                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 97

    $default  reduce using rule 47 (relation_and_exp)


State 62

   19 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 63

   20 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    ident       go to state 41
    statement   go to state 42
    statements  go to state 99
    var         go to state 44


State 64

   65 vars: var .
   66     | var . COMMA vars

    COMMA  shift, and go to state 100

    $default  reduce using rule 65 (vars)


State 65

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 66

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 67

   64 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 101
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 68

   25 statements: statement SEMICOLON .
   26           | statement SEMICOLON . statements

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    $default  reduce using rule 25 (statements)

    ident       go to state 41
    statement   go to state 42
    statements  go to state 102
    var         go to state 44


State 69

    7 end_body: END_BODY .

    $default  reduce using rule 7 (end_body)


State 70

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations END_PARAMS BEGIN_LOCALS $@2 declarations END_LOCALS BEGIN_BODY statements end_body .

    $default  reduce using rule 6 (function)


State 71

   16 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 103
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 72

   39 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 104
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 73

   37 term: SUB NUMBER .

    $default  reduce using rule 37 (term)


State 74

   35 term: SUB var .

    $default  reduce using rule 35 (term)


State 75

   38 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105


State 76

   40 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    $default  reduce using rule 41 (expressions)

    ident                      go to state 49
    expression                 go to state 106
    multiplicative_expression  go to state 51
    term                       go to state 52
    expressions                go to state 107
    comma_sep_expressions      go to state 108
    var                        go to state 53


State 77

   29 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 109
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 78

   28 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 110
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 79

   31 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    multiplicative_expression  go to state 111
    term                       go to state 52
    var                        go to state 53


State 80

   32 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    multiplicative_expression  go to state 112
    term                       go to state 52
    var                        go to state 53


State 81

   33 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    multiplicative_expression  go to state 113
    term                       go to state 52
    var                        go to state 53


State 82

   52 relation_exp: NOT TRUE .

    $default  reduce using rule 52 (relation_exp)


State 83

   54 relation_exp: NOT FALSE .

    $default  reduce using rule 54 (relation_exp)


State 84

   38 term: L_PAREN . expression R_PAREN
   56 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 86
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 114
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 85

   50 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 115


State 86

   38 term: L_PAREN expression . R_PAREN
   49 relation_exp: expression . comp expression

    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93
    R_PAREN  shift, and go to state 105

    comp  go to state 94


State 87

   55 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 116


State 88

   57 comp: EQ .

    $default  reduce using rule 57 (comp)


State 89

   58 comp: NEQ .

    $default  reduce using rule 58 (comp)


State 90

   59 comp: LT .

    $default  reduce using rule 59 (comp)


State 91

   60 comp: GT .

    $default  reduce using rule 60 (comp)


State 92

   61 comp: LTE .

    $default  reduce using rule 61 (comp)


State 93

   62 comp: GTE .

    $default  reduce using rule 62 (comp)


State 94

   49 relation_exp: expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 117
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 95

   17 statement: IF bool_exp THEN . statements ENDIF
   18          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    ident       go to state 41
    statement   go to state 42
    statements  go to state 118
    var         go to state 44


State 96

   46 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 119
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 97

   48 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    relation_and_exp           go to state 120
    relation_exp               go to state 61
    var                        go to state 53


State 98

   19 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    ident       go to state 41
    statement   go to state 42
    statements  go to state 121
    var         go to state 44


State 99

   20 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 122


State 100

   66 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 41
    var    go to state 64
    vars   go to state 123


State 101

   64 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 102

   26 statements: statement SEMICOLON statements .

    $default  reduce using rule 26 (statements)


State 103

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 104

   39 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 125


State 105

   38 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 38 (term)


State 106

   43 comma_sep_expressions: expression .
   44                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 126

    $default  reduce using rule 43 (comma_sep_expressions)


State 107

   40 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 108

   42 expressions: comma_sep_expressions .

    $default  reduce using rule 42 (expressions)


State 109

   29 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 29 (expression)


State 110

   28 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 28 (expression)


State 111

   31 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 112

   32 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 113

   33 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 114

   56 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 128


State 115

   50 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 129
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 116

   55 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 55 (relation_exp)


State 117

   49 relation_exp: expression comp expression .

    $default  reduce using rule 49 (relation_exp)


State 118

   17 statement: IF bool_exp THEN statements . ENDIF
   18          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 130
    ELSE   shift, and go to state 131


State 119

   46 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 46 (bool_exp)


State 120

   48 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 48 (relation_and_exp)


State 121

   19 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 132


State 122

   20 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 133


State 123

   66 vars: var COMMA vars .

    $default  reduce using rule 66 (vars)


State 124

   64 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 125

   39 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 39 (term)


State 126

   44 comma_sep_expressions: expression COMMA . comma_sep_expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 106
    multiplicative_expression  go to state 51
    term                       go to state 52
    comma_sep_expressions      go to state 134
    var                        go to state 53


State 127

   40 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 40 (term)


State 128

   56 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 56 (relation_exp)


State 129

   50 relation_exp: NOT expression comp expression .

    $default  reduce using rule 50 (relation_exp)


State 130

   17 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 17 (statement)


State 131

   18 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    IDENT     shift, and go to state 6

    ident       go to state 41
    statement   go to state 42
    statements  go to state 135
    var         go to state 44


State 132

   19 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 133

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 54
    TRUE     shift, and go to state 55
    FALSE    shift, and go to state 56
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 6

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 136
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 134

   44 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 44 (comma_sep_expressions)


State 135

   18 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 137


State 136

   20 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 20 (statement)


State 137

   18 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 18 (statement)
