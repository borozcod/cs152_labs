Terminals unused in grammar

    MAIN


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 $@1: %empty

    5 $@2: %empty

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    7 end_body: END_BODY

    8 function_ident: FUNCTION ident

    9 ident: IDENT

   10 declarations_local: %empty
   11                   | declaration SEMICOLON declarations_local

   12 declarations_param: %empty
   13                   | declaration SEMICOLON declarations_param

   14 declaration: identifiers COLON INTEGER
   15            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   16 identifiers: ident
   17            | ident COMMA identifiers

   18 statement: var ASSIGN expression
   19          | IF bool_exp THEN statements ENDIF
   20          | IF bool_exp THEN statements ELSE statements ENDIF
   21          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   23          | READ vars
   24          | WRITE vars
   25          | CONTINUE
   26          | RETURN expression

   27 statements: statement SEMICOLON
   28           | statement SEMICOLON statements

   29 expression: multiplicative_expression
   30           | multiplicative_expression ADD expression
   31           | multiplicative_expression SUB expression

   32 multiplicative_expression: term
   33                          | term MULT multiplicative_expression
   34                          | term DIV multiplicative_expression
   35                          | term MOD multiplicative_expression

   36 term: var
   37     | SUB var
   38     | NUMBER
   39     | SUB NUMBER
   40     | L_PAREN expression R_PAREN
   41     | SUB L_PAREN expression R_PAREN
   42     | ident L_PAREN expressions R_PAREN

   43 expressions: %empty
   44            | comma_sep_expressions

   45 comma_sep_expressions: expression
   46                      | expression COMMA comma_sep_expressions

   47 bool_exp: relation_and_exp
   48         | relation_and_exp OR bool_exp

   49 relation_and_exp: relation_exp
   50                 | relation_exp AND relation_and_exp

   51 relation_exp: expression comp expression
   52             | NOT expression comp expression
   53             | TRUE
   54             | NOT TRUE
   55             | FALSE
   56             | NOT FALSE
   57             | L_PAREN bool_exp R_PAREN
   58             | NOT L_PAREN bool_exp R_PAREN

   59 comp: EQ
   60     | NEQ
   61     | LT
   62     | GT
   63     | LTE
   64     | GTE

   65 var: ident
   66    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   67 vars: var
   68     | var COMMA vars


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BEGIN_PARAMS (258) 6
    END_PARAMS (259) 6
    BEGIN_LOCALS (260) 6
    END_LOCALS (261) 6
    BEGIN_BODY (262) 6
    END_BODY (263) 7
    FUNCTION (264) 8
    RETURN (265) 26
    MAIN (266)
    L_SQUARE_BRACKET (267) 15 66
    R_SQUARE_BRACKET (268) 15 66
    INTEGER (269) 14 15
    ARRAY (270) 15
    OF (271) 15
    IF (272) 19 20
    THEN (273) 19 20
    ENDIF (274) 19 20
    ELSE (275) 20
    WHILE (276) 21 22
    DO (277) 22
    BEGINLOOP (278) 21 22
    ENDLOOP (279) 21 22
    CONTINUE (280) 25
    READ (281) 23
    WRITE (282) 24
    AND (283) 50
    OR (284) 48
    NOT (285) 52 54 56 58
    TRUE (286) 53 54
    FALSE (287) 55 56
    SUB (288) 31 37 39 41
    ADD (289) 30
    MULT (290) 33
    DIV (291) 34
    MOD (292) 35
    EQ (293) 59
    NEQ (294) 60
    LT (295) 61
    GT (296) 62
    LTE (297) 63
    GTE (298) 64
    SEMICOLON (299) 6 11 13 27 28
    COLON (300) 14 15
    COMMA (301) 17 46 68
    L_PAREN (302) 40 41 42 57 58
    R_PAREN (303) 40 41 42 57 58
    ASSIGN (304) 18
    NUMBER <op_val> (305) 15 38 39
    IDENT <op_val> (306) 9


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prog_start (53)
        on left: 1
        on right: 0
    functions (54)
        on left: 2 3
        on right: 1 3
    function (55)
        on left: 6
        on right: 3
    $@1 (56)
        on left: 4
        on right: 6
    $@2 (57)
        on left: 5
        on right: 6
    end_body (58)
        on left: 7
        on right: 6
    function_ident (59)
        on left: 8
        on right: 6
    ident <op_val> (60)
        on left: 9
        on right: 8 16 17 42 65 66
    declarations_local (61)
        on left: 10 11
        on right: 6 11
    declarations_param (62)
        on left: 12 13
        on right: 6 13
    declaration (63)
        on left: 14 15
        on right: 11 13
    identifiers <op_val> (64)
        on left: 16 17
        on right: 14 15 17
    statement <op_val> (65)
        on left: 18 19 20 21 22 23 24 25 26
        on right: 27 28
    statements (66)
        on left: 27 28
        on right: 6 19 20 21 22 28
    expression <op_val> (67)
        on left: 29 30 31
        on right: 18 26 30 31 40 41 45 46 51 52 66
    multiplicative_expression <op_val> (68)
        on left: 32 33 34 35
        on right: 29 30 31 33 34 35
    term <op_val> (69)
        on left: 36 37 38 39 40 41 42
        on right: 32 33 34 35
    expressions (70)
        on left: 43 44
        on right: 42
    comma_sep_expressions (71)
        on left: 45 46
        on right: 44 46
    bool_exp (72)
        on left: 47 48
        on right: 19 20 21 22 48 57 58
    relation_and_exp (73)
        on left: 49 50
        on right: 47 48 50
    relation_exp (74)
        on left: 51 52 53 54 55 56 57 58
        on right: 49 50
    comp (75)
        on left: 59 60 61 62 63 64
        on right: 51 52
    var <op_val> (76)
        on left: 65 66
        on right: 18 36 37 67 68
    vars <op_val> (77)
        on left: 67 68
        on right: 23 24 68


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

    8 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    6 function: function_ident . SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    SEMICOLON  shift, and go to state 10


State 6

    9 ident: IDENT .

    $default  reduce using rule 9 (ident)


State 7

    8 function_ident: FUNCTION ident .

    $default  reduce using rule 8 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 10

    6 function: function_ident SEMICOLON . BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    BEGIN_PARAMS  shift, and go to state 11


State 11

    6 function: function_ident SEMICOLON BEGIN_PARAMS . $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 12


State 12

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 . declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 12 (declarations_param)

    ident               go to state 13
    declarations_param  go to state 14
    declaration         go to state 15
    identifiers         go to state 16


State 13

   16 identifiers: ident .
   17            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 16 (identifiers)


State 14

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param . END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    END_PARAMS  shift, and go to state 18


State 15

   13 declarations_param: declaration . SEMICOLON declarations_param

    SEMICOLON  shift, and go to state 19


State 16

   14 declaration: identifiers . COLON INTEGER
   15            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

   17 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    ident        go to state 13
    identifiers  go to state 21


State 18

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS . BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    BEGIN_LOCALS  shift, and go to state 22


State 19

   13 declarations_param: declaration SEMICOLON . declarations_param

    IDENT  shift, and go to state 6

    $default  reduce using rule 12 (declarations_param)

    ident               go to state 13
    declarations_param  go to state 23
    declaration         go to state 15
    identifiers         go to state 16


State 20

   14 declaration: identifiers COLON . INTEGER
   15            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   17 identifiers: ident COMMA identifiers .

    $default  reduce using rule 17 (identifiers)


State 22

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS . $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 26


State 23

   13 declarations_param: declaration SEMICOLON declarations_param .

    $default  reduce using rule 13 (declarations_param)


State 24

   14 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 14 (declaration)


State 25

   15 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 26

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 . declarations_local END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations_local)

    ident               go to state 13
    declarations_local  go to state 28
    declaration         go to state 29
    identifiers         go to state 16


State 27

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local . END_LOCALS BEGIN_BODY statements end_body

    END_LOCALS  shift, and go to state 31


State 29

   11 declarations_local: declaration . SEMICOLON declarations_local

    SEMICOLON  shift, and go to state 32


State 30

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS . BEGIN_BODY statements end_body

    BEGIN_BODY  shift, and go to state 34


State 32

   11 declarations_local: declaration SEMICOLON . declarations_local

    IDENT  shift, and go to state 6

    $default  reduce using rule 10 (declarations_local)

    ident               go to state 13
    declarations_local  go to state 35
    declaration         go to state 29
    identifiers         go to state 16


State 33

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 36


State 34

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY . statements end_body

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statement   go to state 45
    statements  go to state 46
    var         go to state 47


State 35

   11 declarations_local: declaration SEMICOLON declarations_local .

    $default  reduce using rule 11 (declarations_local)


State 36

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 48


State 37

   26 statement: RETURN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 53
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 38

   19 statement: IF . bool_exp THEN statements ENDIF
   20          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 61
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 62
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 39

   21 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 61
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 65
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 40

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 66


State 41

   25 statement: CONTINUE .

    $default  reduce using rule 25 (statement)


State 42

   23 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 67
    vars   go to state 68


State 43

   24 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 67
    vars   go to state 69


State 44

   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 65 (var)


State 45

   27 statements: statement . SEMICOLON
   28           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 71


State 46

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements . end_body

    END_BODY  shift, and go to state 72

    end_body  go to state 73


State 47

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 48

   15 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (declaration)


State 49

   37 term: SUB . var
   39     | SUB . NUMBER
   41     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 76
    IDENT    shift, and go to state 6

    ident  go to state 44
    var    go to state 77


State 50

   40 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 78
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 51

   38 term: NUMBER .

    $default  reduce using rule 38 (term)


State 52

   42 term: ident . L_PAREN expressions R_PAREN
   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 79

    $default  reduce using rule 65 (var)


State 53

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 54

   29 expression: multiplicative_expression .
   30           | multiplicative_expression . ADD expression
   31           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 80
    ADD  shift, and go to state 81

    $default  reduce using rule 29 (expression)


State 55

   32 multiplicative_expression: term .
   33                          | term . MULT multiplicative_expression
   34                          | term . DIV multiplicative_expression
   35                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 82
    DIV   shift, and go to state 83
    MOD   shift, and go to state 84

    $default  reduce using rule 32 (multiplicative_expression)


State 56

   36 term: var .

    $default  reduce using rule 36 (term)


State 57

   52 relation_exp: NOT . expression comp expression
   54             | NOT . TRUE
   56             | NOT . FALSE
   58             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 85
    FALSE    shift, and go to state 86
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 87
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 88
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 58

   53 relation_exp: TRUE .

    $default  reduce using rule 53 (relation_exp)


State 59

   55 relation_exp: FALSE .

    $default  reduce using rule 55 (relation_exp)


State 60

   40 term: L_PAREN . expression R_PAREN
   57 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 89
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 90
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 61

   51 relation_exp: expression . comp expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    comp  go to state 97


State 62

   19 statement: IF bool_exp . THEN statements ENDIF
   20          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 98


State 63

   47 bool_exp: relation_and_exp .
   48         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 99

    $default  reduce using rule 47 (bool_exp)


State 64

   49 relation_and_exp: relation_exp .
   50                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 100

    $default  reduce using rule 49 (relation_and_exp)


State 65

   21 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 66

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statement   go to state 45
    statements  go to state 102
    var         go to state 47


State 67

   67 vars: var .
   68     | var . COMMA vars

    COMMA  shift, and go to state 103

    $default  reduce using rule 67 (vars)


State 68

   23 statement: READ vars .

    $default  reduce using rule 23 (statement)


State 69

   24 statement: WRITE vars .

    $default  reduce using rule 24 (statement)


State 70

   66 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 104
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 71

   27 statements: statement SEMICOLON .
   28           | statement SEMICOLON . statements

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    $default  reduce using rule 27 (statements)

    ident       go to state 44
    statement   go to state 45
    statements  go to state 105
    var         go to state 47


State 72

    7 end_body: END_BODY .

    $default  reduce using rule 7 (end_body)


State 73

    6 function: function_ident SEMICOLON BEGIN_PARAMS $@1 declarations_param END_PARAMS BEGIN_LOCALS $@2 declarations_local END_LOCALS BEGIN_BODY statements end_body .

    $default  reduce using rule 6 (function)


State 74

   18 statement: var ASSIGN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 106
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 75

   41 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 107
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 76

   39 term: SUB NUMBER .

    $default  reduce using rule 39 (term)


State 77

   37 term: SUB var .

    $default  reduce using rule 37 (term)


State 78

   40 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 79

   42 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    $default  reduce using rule 43 (expressions)

    ident                      go to state 52
    expression                 go to state 109
    multiplicative_expression  go to state 54
    term                       go to state 55
    expressions                go to state 110
    comma_sep_expressions      go to state 111
    var                        go to state 56


State 80

   31 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 112
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 81

   30 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 113
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 82

   33 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    multiplicative_expression  go to state 114
    term                       go to state 55
    var                        go to state 56


State 83

   34 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    multiplicative_expression  go to state 115
    term                       go to state 55
    var                        go to state 56


State 84

   35 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    multiplicative_expression  go to state 116
    term                       go to state 55
    var                        go to state 56


State 85

   54 relation_exp: NOT TRUE .

    $default  reduce using rule 54 (relation_exp)


State 86

   56 relation_exp: NOT FALSE .

    $default  reduce using rule 56 (relation_exp)


State 87

   40 term: L_PAREN . expression R_PAREN
   58 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 89
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 117
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 88

   52 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    comp  go to state 118


State 89

   40 term: L_PAREN expression . R_PAREN
   51 relation_exp: expression . comp expression

    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    LT       shift, and go to state 93
    GT       shift, and go to state 94
    LTE      shift, and go to state 95
    GTE      shift, and go to state 96
    R_PAREN  shift, and go to state 108

    comp  go to state 97


State 90

   57 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 119


State 91

   59 comp: EQ .

    $default  reduce using rule 59 (comp)


State 92

   60 comp: NEQ .

    $default  reduce using rule 60 (comp)


State 93

   61 comp: LT .

    $default  reduce using rule 61 (comp)


State 94

   62 comp: GT .

    $default  reduce using rule 62 (comp)


State 95

   63 comp: LTE .

    $default  reduce using rule 63 (comp)


State 96

   64 comp: GTE .

    $default  reduce using rule 64 (comp)


State 97

   51 relation_exp: expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 120
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 98

   19 statement: IF bool_exp THEN . statements ENDIF
   20          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statement   go to state 45
    statements  go to state 121
    var         go to state 47


State 99

   48 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 61
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 122
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 100

   50 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 61
    multiplicative_expression  go to state 54
    term                       go to state 55
    relation_and_exp           go to state 123
    relation_exp               go to state 64
    var                        go to state 56


State 101

   21 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statement   go to state 45
    statements  go to state 124
    var         go to state 47


State 102

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 125


State 103

   68 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 44
    var    go to state 67
    vars   go to state 126


State 104

   66 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 105

   28 statements: statement SEMICOLON statements .

    $default  reduce using rule 28 (statements)


State 106

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 107

   41 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 108

   40 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 40 (term)


State 109

   45 comma_sep_expressions: expression .
   46                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 129

    $default  reduce using rule 45 (comma_sep_expressions)


State 110

   42 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 111

   44 expressions: comma_sep_expressions .

    $default  reduce using rule 44 (expressions)


State 112

   31 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 31 (expression)


State 113

   30 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 30 (expression)


State 114

   33 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 115

   34 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 116

   35 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 117

   58 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 131


State 118

   52 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 132
    multiplicative_expression  go to state 54
    term                       go to state 55
    var                        go to state 56


State 119

   57 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 57 (relation_exp)


State 120

   51 relation_exp: expression comp expression .

    $default  reduce using rule 51 (relation_exp)


State 121

   19 statement: IF bool_exp THEN statements . ENDIF
   20          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 133
    ELSE   shift, and go to state 134


State 122

   48 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 48 (bool_exp)


State 123

   50 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 50 (relation_and_exp)


State 124

   21 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 125

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 136


State 126

   68 vars: var COMMA vars .

    $default  reduce using rule 68 (vars)


State 127

   66 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (var)


State 128

   41 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 41 (term)


State 129

   46 comma_sep_expressions: expression COMMA . comma_sep_expressions

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 109
    multiplicative_expression  go to state 54
    term                       go to state 55
    comma_sep_expressions      go to state 137
    var                        go to state 56


State 130

   42 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 42 (term)


State 131

   58 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 58 (relation_exp)


State 132

   52 relation_exp: NOT expression comp expression .

    $default  reduce using rule 52 (relation_exp)


State 133

   19 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 19 (statement)


State 134

   20 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    IDENT     shift, and go to state 6

    ident       go to state 44
    statement   go to state 45
    statements  go to state 138
    var         go to state 47


State 135

   21 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 136

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 6

    ident                      go to state 52
    expression                 go to state 61
    multiplicative_expression  go to state 54
    term                       go to state 55
    bool_exp                   go to state 139
    relation_and_exp           go to state 63
    relation_exp               go to state 64
    var                        go to state 56


State 137

   46 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 46 (comma_sep_expressions)


State 138

   20 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 140


State 139

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 22 (statement)


State 140

   20 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)
