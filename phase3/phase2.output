Terminals unused in grammar

   MAIN


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    5 end_body: END_BODY

    6 function_ident: FUNCTION ident

    7 ident: IDENT

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifiers: ident
   13            | ident COMMA identifiers

   14 statement: var ASSIGN expression
   15          | IF bool_exp THEN statements ENDIF
   16          | IF bool_exp THEN statements ELSE statements ENDIF
   17          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   18          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | READ vars
   20          | WRITE vars
   21          | CONTINUE
   22          | RETURN expression

   23 statements: statement SEMICOLON
   24           | statement SEMICOLON statements

   25 expression: multiplicative_expression
   26           | multiplicative_expression ADD expression
   27           | multiplicative_expression SUB expression

   28 multiplicative_expression: term
   29                          | term MULT multiplicative_expression
   30                          | term DIV multiplicative_expression
   31                          | term MOD multiplicative_expression

   32 term: var
   33     | SUB var
   34     | NUMBER
   35     | SUB NUMBER
   36     | L_PAREN expression R_PAREN
   37     | SUB L_PAREN expression R_PAREN
   38     | ident L_PAREN expressions R_PAREN

   39 expressions: %empty
   40            | comma_sep_expressions

   41 comma_sep_expressions: expression
   42                      | expression COMMA comma_sep_expressions

   43 bool_exp: relation_and_exp
   44         | relation_and_exp OR bool_exp

   45 relation_and_exp: relation_exp
   46                 | relation_exp AND relation_and_exp

   47 relation_exp: expression comp expression
   48             | NOT expression comp expression
   49             | TRUE
   50             | NOT TRUE
   51             | FALSE
   52             | NOT FALSE
   53             | L_PAREN bool_exp R_PAREN
   54             | NOT L_PAREN bool_exp R_PAREN

   55 comp: EQ
   56     | NEQ
   57     | LT
   58     | GT
   59     | LTE
   60     | GTE

   61 var: ident
   62    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   63 vars: var
   64     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_PARAMS (258) 4
END_PARAMS (259) 4
BEGIN_LOCALS (260) 4
END_LOCALS (261) 4
BEGIN_BODY (262) 4
END_BODY (263) 5
FUNCTION (264) 6
RETURN (265) 22
MAIN (266)
L_SQUARE_BRACKET (267) 11 62
R_SQUARE_BRACKET (268) 11 62
INTEGER (269) 10 11
ARRAY (270) 11
OF (271) 11
IF (272) 15 16
THEN (273) 15 16
ENDIF (274) 15 16
ELSE (275) 16
WHILE (276) 17 18
DO (277) 18
BEGINLOOP (278) 17 18
ENDLOOP (279) 17 18
CONTINUE (280) 21
READ (281) 19
WRITE (282) 20
AND (283) 46
OR (284) 44
NOT (285) 48 50 52 54
TRUE (286) 49 50
FALSE (287) 51 52
SUB (288) 27 33 35 37
ADD (289) 26
MULT (290) 29
DIV (291) 30
MOD (292) 31
EQ (293) 55
NEQ (294) 56
LT (295) 57
GT (296) 58
LTE (297) 59
GTE (298) 60
SEMICOLON (299) 4 9 23 24
COLON (300) 10 11
COMMA (301) 13 42 64
L_PAREN (302) 36 37 38 53 54
R_PAREN (303) 36 37 38 53 54
ASSIGN (304) 14
NUMBER (305) 11 34 35
IDENT (306) 7


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
end_body (56)
    on left: 5, on right: 4
function_ident (57)
    on left: 6, on right: 4
ident (58)
    on left: 7, on right: 6 12 13 38 61 62
declarations (59)
    on left: 8 9, on right: 4 9
declaration (60)
    on left: 10 11, on right: 9
identifiers (61)
    on left: 12 13, on right: 10 11 13
statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 23 24
statements (63)
    on left: 23 24, on right: 4 15 16 17 18 24
expression (64)
    on left: 25 26 27, on right: 14 22 26 27 36 37 41 42 47 48 62
multiplicative_expression (65)
    on left: 28 29 30 31, on right: 25 26 27 29 30 31
term (66)
    on left: 32 33 34 35 36 37 38, on right: 28 29 30 31
expressions (67)
    on left: 39 40, on right: 38
comma_sep_expressions (68)
    on left: 41 42, on right: 40 42
bool_exp (69)
    on left: 43 44, on right: 15 16 17 18 44 53 54
relation_and_exp (70)
    on left: 45 46, on right: 43 44 46
relation_exp (71)
    on left: 47 48 49 50 51 52 53 54, on right: 45 46
comp (72)
    on left: 55 56 57 58 59 60, on right: 47 48
var (73)
    on left: 61 62, on right: 14 32 33 63 64
vars (74)
    on left: 63 64, on right: 19 20 64


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

    6 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    4 function: function_ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    SEMICOLON  shift, and go to state 10


State 6

    7 ident: IDENT .

    $default  reduce using rule 7 (ident)


State 7

    6 function_ident: FUNCTION ident .

    $default  reduce using rule 6 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 10

    4 function: function_ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: function_ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarations)

    ident         go to state 12
    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15


State 12

   12 identifiers: ident .
   13            | ident . COMMA identifiers

    COMMA  shift, and go to state 16

    $default  reduce using rule 12 (identifiers)


State 13

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    END_PARAMS  shift, and go to state 17


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   13 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    ident        go to state 12
    identifiers  go to state 20


State 17

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_LOCALS  shift, and go to state 21


State 18

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarations)

    ident         go to state 12
    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15


State 19

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   13 identifiers: ident COMMA identifiers .

    $default  reduce using rule 13 (identifiers)


State 21

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 6

    $default  reduce using rule 8 (declarations)

    ident         go to state 12
    declarations  go to state 25
    declaration   go to state 14
    identifiers   go to state 15


State 22

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 23

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements end_body

    END_LOCALS  shift, and go to state 27


State 26

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements end_body

    BEGIN_BODY  shift, and go to state 29


State 28

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements end_body

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    ident       go to state 38
    statement   go to state 39
    statements  go to state 40
    var         go to state 41


State 30

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 31

   22 statement: RETURN . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 47
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 32

   15 statement: IF . bool_exp THEN statements ENDIF
   16          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 55
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 56
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 33

   17 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 55
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 59
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 34

   18 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 60


State 35

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 36

   19 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 38
    var    go to state 61
    vars   go to state 62


State 37

   20 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 38
    var    go to state 61
    vars   go to state 63


State 38

   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 61 (var)


State 39

   23 statements: statement . SEMICOLON
   24           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 65


State 40

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . end_body

    END_BODY  shift, and go to state 66

    end_body  go to state 67


State 41

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 42

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 43

   33 term: SUB . var
   35     | SUB . NUMBER
   37     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 70
    NUMBER   shift, and go to state 71
    IDENT    shift, and go to state 6

    ident  go to state 38
    var    go to state 72


State 44

   36 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 73
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 45

   34 term: NUMBER .

    $default  reduce using rule 34 (term)


State 46

   38 term: ident . L_PAREN expressions R_PAREN
   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64
    L_PAREN           shift, and go to state 74

    $default  reduce using rule 61 (var)


State 47

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 48

   25 expression: multiplicative_expression .
   26           | multiplicative_expression . ADD expression
   27           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 75
    ADD  shift, and go to state 76

    $default  reduce using rule 25 (expression)


State 49

   28 multiplicative_expression: term .
   29                          | term . MULT multiplicative_expression
   30                          | term . DIV multiplicative_expression
   31                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 77
    DIV   shift, and go to state 78
    MOD   shift, and go to state 79

    $default  reduce using rule 28 (multiplicative_expression)


State 50

   32 term: var .

    $default  reduce using rule 32 (term)


State 51

   48 relation_exp: NOT . expression comp expression
   50             | NOT . TRUE
   52             | NOT . FALSE
   54             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 80
    FALSE    shift, and go to state 81
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 82
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 83
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 52

   49 relation_exp: TRUE .

    $default  reduce using rule 49 (relation_exp)


State 53

   51 relation_exp: FALSE .

    $default  reduce using rule 51 (relation_exp)


State 54

   36 term: L_PAREN . expression R_PAREN
   53 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 84
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 85
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 55

   47 relation_exp: expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 92


State 56

   15 statement: IF bool_exp . THEN statements ENDIF
   16          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 93


State 57

   43 bool_exp: relation_and_exp .
   44         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 94

    $default  reduce using rule 43 (bool_exp)


State 58

   45 relation_and_exp: relation_exp .
   46                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 95

    $default  reduce using rule 45 (relation_and_exp)


State 59

   17 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 60

   18 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    ident       go to state 38
    statement   go to state 39
    statements  go to state 97
    var         go to state 41


State 61

   63 vars: var .
   64     | var . COMMA vars

    COMMA  shift, and go to state 98

    $default  reduce using rule 63 (vars)


State 62

   19 statement: READ vars .

    $default  reduce using rule 19 (statement)


State 63

   20 statement: WRITE vars .

    $default  reduce using rule 20 (statement)


State 64

   62 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 99
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 65

   23 statements: statement SEMICOLON .
   24           | statement SEMICOLON . statements

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    $default  reduce using rule 23 (statements)

    ident       go to state 38
    statement   go to state 39
    statements  go to state 100
    var         go to state 41


State 66

    5 end_body: END_BODY .

    $default  reduce using rule 5 (end_body)


State 67

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body .

    $default  reduce using rule 4 (function)


State 68

   14 statement: var ASSIGN . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 101
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 69

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 70

   37 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 102
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 71

   35 term: SUB NUMBER .

    $default  reduce using rule 35 (term)


State 72

   33 term: SUB var .

    $default  reduce using rule 33 (term)


State 73

   36 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103


State 74

   38 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    $default  reduce using rule 39 (expressions)

    ident                      go to state 46
    expression                 go to state 104
    multiplicative_expression  go to state 48
    term                       go to state 49
    expressions                go to state 105
    comma_sep_expressions      go to state 106
    var                        go to state 50


State 75

   27 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 107
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 76

   26 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 108
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 77

   29 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    multiplicative_expression  go to state 109
    term                       go to state 49
    var                        go to state 50


State 78

   30 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    multiplicative_expression  go to state 110
    term                       go to state 49
    var                        go to state 50


State 79

   31 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    multiplicative_expression  go to state 111
    term                       go to state 49
    var                        go to state 50


State 80

   50 relation_exp: NOT TRUE .

    $default  reduce using rule 50 (relation_exp)


State 81

   52 relation_exp: NOT FALSE .

    $default  reduce using rule 52 (relation_exp)


State 82

   36 term: L_PAREN . expression R_PAREN
   54 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 84
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 112
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 83

   48 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 113


State 84

   36 term: L_PAREN expression . R_PAREN
   47 relation_exp: expression . comp expression

    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87
    LT       shift, and go to state 88
    GT       shift, and go to state 89
    LTE      shift, and go to state 90
    GTE      shift, and go to state 91
    R_PAREN  shift, and go to state 103

    comp  go to state 92


State 85

   53 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 114


State 86

   55 comp: EQ .

    $default  reduce using rule 55 (comp)


State 87

   56 comp: NEQ .

    $default  reduce using rule 56 (comp)


State 88

   57 comp: LT .

    $default  reduce using rule 57 (comp)


State 89

   58 comp: GT .

    $default  reduce using rule 58 (comp)


State 90

   59 comp: LTE .

    $default  reduce using rule 59 (comp)


State 91

   60 comp: GTE .

    $default  reduce using rule 60 (comp)


State 92

   47 relation_exp: expression comp . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 115
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 93

   15 statement: IF bool_exp THEN . statements ENDIF
   16          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    ident       go to state 38
    statement   go to state 39
    statements  go to state 116
    var         go to state 41


State 94

   44 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 55
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 117
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 95

   46 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 55
    multiplicative_expression  go to state 48
    term                       go to state 49
    relation_and_exp           go to state 118
    relation_exp               go to state 58
    var                        go to state 50


State 96

   17 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    ident       go to state 38
    statement   go to state 39
    statements  go to state 119
    var         go to state 41


State 97

   18 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 120


State 98

   64 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 38
    var    go to state 61
    vars   go to state 121


State 99

   62 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 122


State 100

   24 statements: statement SEMICOLON statements .

    $default  reduce using rule 24 (statements)


State 101

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 102

   37 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 103

   36 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 36 (term)


State 104

   41 comma_sep_expressions: expression .
   42                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 124

    $default  reduce using rule 41 (comma_sep_expressions)


State 105

   38 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 125


State 106

   40 expressions: comma_sep_expressions .

    $default  reduce using rule 40 (expressions)


State 107

   27 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 27 (expression)


State 108

   26 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 26 (expression)


State 109

   29 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 110

   30 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 111

   31 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 112

   54 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 126


State 113

   48 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 127
    multiplicative_expression  go to state 48
    term                       go to state 49
    var                        go to state 50


State 114

   53 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 53 (relation_exp)


State 115

   47 relation_exp: expression comp expression .

    $default  reduce using rule 47 (relation_exp)


State 116

   15 statement: IF bool_exp THEN statements . ENDIF
   16          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 128
    ELSE   shift, and go to state 129


State 117

   44 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 44 (bool_exp)


State 118

   46 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 46 (relation_and_exp)


State 119

   17 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 120

   18 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 131


State 121

   64 vars: var COMMA vars .

    $default  reduce using rule 64 (vars)


State 122

   62 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 123

   37 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 37 (term)


State 124

   42 comma_sep_expressions: expression COMMA . comma_sep_expressions

    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 104
    multiplicative_expression  go to state 48
    term                       go to state 49
    comma_sep_expressions      go to state 132
    var                        go to state 50


State 125

   38 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 38 (term)


State 126

   54 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 54 (relation_exp)


State 127

   48 relation_exp: NOT expression comp expression .

    $default  reduce using rule 48 (relation_exp)


State 128

   15 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 15 (statement)


State 129

   16 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    IDENT     shift, and go to state 6

    ident       go to state 38
    statement   go to state 39
    statements  go to state 133
    var         go to state 41


State 130

   17 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 131

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    SUB      shift, and go to state 43
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 6

    ident                      go to state 46
    expression                 go to state 55
    multiplicative_expression  go to state 48
    term                       go to state 49
    bool_exp                   go to state 134
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    var                        go to state 50


State 132

   42 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 42 (comma_sep_expressions)


State 133

   16 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 135


State 134

   18 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 135

   16 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 16 (statement)
